{"componentChunkName":"component---src-templates-post-jsx","path":"/Sqlalchemy에서의-트랜잭션-격리-수준-구현/","result":{"data":{"site":{"siteMetadata":{"title":"SharkniA"}},"markdownRemark":{"id":"2f0bdc06-8ac6-5591-952a-2fa5601cb02c","excerpt":"구현 목적 상품 구매에 관련된 API를 구현하려고 한다. DynamoDB를 사용할 때에 동시성 이슈로 쿠폰 중복 구매 이슈가 있었으므로 이번에 RDS로 옮긴 김에 해당 문제를 완벽하게 해결하기 위해 다각도로 방법을 고민했다.  그 방안 중 하나가 트랜잭션 격리 수준(Transaction Isolation Level) 을 이용한 것이다.  SqlAlchem…","html":"<h2>구현 목적</h2>\n<p>상품 구매에 관련된 API를 구현하려고 한다. DynamoDB를 사용할 때에 동시성 이슈로 쿠폰 중복 구매 이슈가 있었으므로 이번에 RDS로 옮긴 김에 해당 문제를 완벽하게 해결하기 위해 다각도로 방법을 고민했다. </p>\n<p>그 방안 중 하나가 <a href=\"https://sharknia.github.io/2024-01-29/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%EA%B2%A9%EB%A6%AC-%EC%88%98%EC%A4%80Transaction-Isolation-Level\">트랜잭션 격리 수준(Transaction Isolation Level)</a> 을 이용한 것이다. </p>\n<p>SqlAlchemy - Postgresql을 사용하고 있는데, 이 라이브러리에서 트랜잭션 격리 수준을 어떻게 구현했는지 기록한다. </p>\n<h2>현재</h2>\n<p>현재에는 기본 격리 수준을 사용한(별다른 옵션값이 없는) 엔진만 사용하고 있다. API 별로 별도의 세션을 사용하기 위해 의존성 주입 방식을 사용하며, 이를 위해 <code class=\"language-text\">AsyncIterable[AsyncSession]</code>을 생성한다. 대략적인 코드는 다음과 같다. </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">_db_connection<span class=\"token punctuation\">:</span> AsyncEngine\n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">on_startup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    _db_connection <span class=\"token operator\">=</span> create_async_engine<span class=\"token punctuation\">(</span>\n        DATABASE_URL<span class=\"token punctuation\">,</span>\n        pool_size<span class=\"token operator\">=</span>pool_size<span class=\"token punctuation\">,</span>\n        max_overflow<span class=\"token operator\">=</span>max_overflow<span class=\"token punctuation\">,</span>\n        echo<span class=\"token operator\">=</span>echo<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">get_db_connection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> AsyncEngine<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">assert</span> _db_connection <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span>\n    <span class=\"token keyword\">return</span> _db_connection\n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">get_db_session</span><span class=\"token punctuation\">(</span>\n    db_conn<span class=\"token punctuation\">:</span> AsyncEngine <span class=\"token operator\">=</span> Depends<span class=\"token punctuation\">(</span>get_db_connection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> AsyncIterable<span class=\"token punctuation\">[</span>AsyncSession<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    session <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> sessionmaker<span class=\"token punctuation\">(</span>\n            db_conn<span class=\"token punctuation\">,</span>\n            class_<span class=\"token operator\">=</span>AsyncSession<span class=\"token punctuation\">,</span>\n            expire_on_commit<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> session<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">yield</span> session\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[get_db_session] </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>e<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">await</span> session<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">raise</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> session<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">await</span> session<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>그리고 각 API의 엔드포인트에서 get<em>db</em>session을 주입받아 사용한다. </p>\n<p>이 엔진은 기본적으로 Read Committed 격리수준만 지원한다. </p>\n<h2>모험</h2>\n<h3>sessionmaker 레벨에서 트랜잭션 격리 수준 설정?</h3>\n<p>이렇게 내용이 조금만 깊어져도 챗지피티는 믿을 놈이 못된다. 챗지피티에서는 sessionmaker 레벨에서 트랜잭션 격리 수준 설정이 가능하다며, sessionmaker의 매개변수에 <code class=\"language-text\">isolation_level=\"SERIALIZABLE”</code> 를 추가해주면 된다고 주장한다. </p>\n<p>하지만 sessionmaker의 생성자에는 <code class=\"language-text\">isolation_level</code> 매개 변수가 없어 해당 설정은 바로 오류를 낸다. 이럴 경우 답은 스스로 해결하는 것 밖에 없다. </p>\n<h3>트랜잭션 별 엔진 별도 생성?</h3>\n<p>첫 구현은 단순하게 생각해서 엔진을 여러개를 만들었다. 즉, <code class=\"language-text\">isolation_level</code> 옵션을 각각 다르게 준create<em>async</em>engine을 여러번 하는 것이다. 이러면 간단하게 해결이 된다. 하지만 이렇게 할 경우에는 문제가 있다. 각각의 엔진이 모두 별도의 풀을 생성하면서 의도치 않게 커넥션이 증가할 위험이 있는 것이다. 안그래도 <a href=\"https://sharknia.github.io/2024-01-18/SqlAlchemy%EC%9D%98-QueuePool\">SqlAlchemy의 QueuePool</a> 를 겪었었기 때문에 해당 이슈는 꼭 피하고 싶었다. </p>\n<h2>개선(해결)</h2>\n<p>코드를 짜다보면 “이건 있어야 하는데?”라고 느낄때가 있다. 그런것들은 대부분, 너무 미완성인 라이브러리나 프레임워크가 아니라면 반드시 나온다. 구현 가능한데 필요성을 느끼는 것은 반드시 누군가 만들어둔 것이다. </p>\n<p>명확하게 다른 엔진이면서 풀을 공유하는 방법이 존재한다. <code class=\"language-text\">execution_options()</code> 를 사용하면 된다. </p>\n<h3>execution_options()</h3>\n<p><code class=\"language-text\">AsyncEngine</code>에서 <code class=\"language-text\">execution_options()</code> 메소드를 사용하면 반환되는 엔진도 <code class=\"language-text\">AsyncEngine</code> 타입이 된다. 이 메소드는 Engine, Connection, Session 객체에서도 사용할 수 있으며, 특정 실행 옵션을 동적으로 설정하거나 변경하기 위해 사용된다. </p>\n<p>이 메소드를 사용하면 동일한 연결 풀을 공유하면서도 다른 실행 옵션을 가진 엔진을 생성할 수 있다. </p>\n<p>개선된 코드는 다음과 같다. </p>\n<p><em>db</em>connection 설정 후, <em>db</em>connection<em>serializable를 `execution</em>options()` 를 사용해 정의한다. </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">_db_connection_serializable <span class=\"token operator\">=</span> _db_connection<span class=\"token punctuation\">.</span>execution_options<span class=\"token punctuation\">(</span>\n        isolation_level<span class=\"token operator\">=</span><span class=\"token string\">\"SERIALIZABLE\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span></code></pre></div>\n<p>해당 값을 사용한 의존성 주입용 메소드를 선언한다. </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">get_db_connection_serializable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> AsyncEngine<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">assert</span> _db_connection_serializable <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span>\n    <span class=\"token keyword\">return</span> _db_connection_serializable\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">get_serializable_db_session</span><span class=\"token punctuation\">(</span>\n    db_conn<span class=\"token punctuation\">:</span> AsyncEngine <span class=\"token operator\">=</span> Depends<span class=\"token punctuation\">(</span>get_db_connection_serializable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> AsyncIterable<span class=\"token punctuation\">[</span>AsyncSession<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    session <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> sessionmaker<span class=\"token punctuation\">(</span>\n            db_conn<span class=\"token punctuation\">,</span>\n            class_<span class=\"token operator\">=</span>AsyncSession<span class=\"token punctuation\">,</span>\n            expire_on_commit<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> session<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">yield</span> session\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[get_serializable_db_session] </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>e<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> session<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">await</span> session<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">raise</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> session<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">await</span> session<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이제 엔드포인트에서 기존 get<em>db</em>session 대신 이 메소드를 사용하면 다른 옵션의 격리 레벨을 사용할 수 있다!</p>","frontmatter":{"title":"Sqlalchemy에서의 트랜잭션 격리 수준 구현","date":"January 29, 2024","update":"January 31, 2024","tags":["SqlAlchemy","DataBase","Python","Work"],"series":null},"fields":{"slug":"/Sqlalchemy에서의-트랜잭션-격리-수준-구현/","readingTime":{"minutes":5.145}}},"seriesList":{"edges":[{"node":{"id":"4d7b1074-b3ac-5c36-a73e-a6ed1a202a07","fields":{"slug":"/화상상담을-위한-Janus-구성/"},"frontmatter":{"title":"화상상담을 위한 Janus 구성"}}},{"node":{"id":"be7886e5-3159-5c98-a6f3-04c7a2cb00f1","fields":{"slug":"/JavaScript의-특징-브라우저-동작-원리/"},"frontmatter":{"title":"JavaScript의 특징, 브라우저 동작 원리"}}},{"node":{"id":"9a2c7ec4-7e91-5e89-ba8c-370cbcc12df1","fields":{"slug":"/JavaScript-기본-문법/"},"frontmatter":{"title":"JavaScript 기본 문법"}}},{"node":{"id":"e54de3fc-18b6-547e-b09b-1f53e9088c5c","fields":{"slug":"/JavaScript의-변수/"},"frontmatter":{"title":"JavaScript의 변수"}}},{"node":{"id":"b91beb4b-9e88-5fcc-8c2a-c17cfe8901e8","fields":{"slug":"/JavaScript의-타입-변환과-단축-평가/"},"frontmatter":{"title":"JavaScript의 타입 변환과 단축 평가"}}},{"node":{"id":"92c32653-4965-51f9-844b-e2240edb82a0","fields":{"slug":"/JavaScript-클로저/"},"frontmatter":{"title":"JavaScript 클로저"}}},{"node":{"id":"ce5dde98-2a05-5571-8fa3-0142001310e8","fields":{"slug":"/NestJS-소개/"},"frontmatter":{"title":"NestJS 소개"}}},{"node":{"id":"0067c3b8-3361-56fa-8334-a282f0483dba","fields":{"slug":"/DB-튜닝-경험/"},"frontmatter":{"title":"DB 튜닝 경험"}}},{"node":{"id":"6ae7a6a0-7b5c-5841-878c-6d7a3e1ca05e","fields":{"slug":"/MORETHAN-LOG-설치/"},"frontmatter":{"title":"MORETHAN-LOG 설치"}}},{"node":{"id":"05f5432c-a8e7-5f94-a5f2-3f53ee688f7e","fields":{"slug":"/RDB관계형-데이터베이스-RDBMS/"},"frontmatter":{"title":"RDB(관계형 데이터베이스) + RDBMS"}}},{"node":{"id":"994cd992-ad07-50c1-a53f-51327e2718ed","fields":{"slug":"/var와-letconst/"},"frontmatter":{"title":"var와 let,const"}}},{"node":{"id":"b3eaf950-be62-583c-901d-64b231ea1a4e","fields":{"slug":"/MORETHAN-LOG-수정/"},"frontmatter":{"title":"MORETHAN-LOG 수정"}}},{"node":{"id":"dbb851fb-ea02-5fee-9765-511909593b42","fields":{"slug":"/NestJS-설치/"},"frontmatter":{"title":"NestJS 설치"}}},{"node":{"id":"71fda05f-affe-57c1-a82f-b7e0cc751098","fields":{"slug":"/NestJS의-디렉토리-구조/"},"frontmatter":{"title":"NestJS의 디렉토리 구조"}}},{"node":{"id":"d6a60bda-2a50-57da-96b2-b93e35f8dcb5","fields":{"slug":"/웹-사이트-프로젝트-vs-웹-응용-프로그램-프로젝트/"},"frontmatter":{"title":"웹 사이트 프로젝트 vs "}}},{"node":{"id":"ce6456e3-d3a3-51a7-b579-9f3c5f527ccc","fields":{"slug":"/Nuget-패키지-dll-추출/"},"frontmatter":{"title":"Nuget 패키지 dll 추출"}}},{"node":{"id":"a87e2b15-536a-5ca0-b900-e74918dec21f","fields":{"slug":"/무료-웹-호스팅-비교/"},"frontmatter":{"title":"무료 웹 호스팅 비교"}}},{"node":{"id":"d98289b5-f9c9-507e-9dcf-a159fa9a3a68","fields":{"slug":"/PRG-패턴-PostRedirectGet/"},"frontmatter":{"title":"PRG 패턴 (Post/Redirect/Get)"}}},{"node":{"id":"3308bd5e-b7b6-5be9-92d9-fe7476c6402d","fields":{"slug":"/Python-venv-Windows/"},"frontmatter":{"title":"Python venv (Windows)"}}},{"node":{"id":"b0b4f379-3003-5d6c-99b9-6d77e851ef0f","fields":{"slug":"/print와-pprint/"},"frontmatter":{"title":"print와 pprint"}}},{"node":{"id":"94dcf7a2-c028-5af8-a636-eeb08ffcabc0","fields":{"slug":"/정규화와-역정규화/"},"frontmatter":{"title":"정규화와 역정규화"}}},{"node":{"id":"5cb3526c-9ea8-5a35-99d9-0c158d432255","fields":{"slug":"/트래픽-튜닝/"},"frontmatter":{"title":"트래픽 튜닝"}}},{"node":{"id":"a137a64e-c66b-5557-b12d-3d767b828c5b","fields":{"slug":"/npx/"},"frontmatter":{"title":"npx"}}},{"node":{"id":"43386ca5-6d01-5b87-8f92-2696879f9b7b","fields":{"slug":"/Branch/"},"frontmatter":{"title":"Branch"}}},{"node":{"id":"88bcc3b2-d382-561b-8659-7978ed002a5f","fields":{"slug":"/DataTable-클래스/"},"frontmatter":{"title":"DataTable 클래스"}}},{"node":{"id":"4207210d-f1de-5875-97ec-0e7af80ad71e","fields":{"slug":"/Typescript-시작하기/"},"frontmatter":{"title":"Typescript 시작하기"}}},{"node":{"id":"48ba652d-3d02-50d5-b950-ae26be40f119","fields":{"slug":"/gitignore/"},"frontmatter":{"title":"gitignore"}}},{"node":{"id":"8d70bf78-f023-56e8-b297-15d68fdcf917","fields":{"slug":"/Factory-Pattern/"},"frontmatter":{"title":"Factory Pattern"}}},{"node":{"id":"44fc92b7-3ec8-559c-8f3c-7b73aba0f890","fields":{"slug":"/네이밍-규칙naming-conventions/"},"frontmatter":{"title":"네이밍 규칙(naming conventions)"}}},{"node":{"id":"cd5da1fd-9f44-5c6f-96b1-a07978bfbc1d","fields":{"slug":"/AWS-API-Gateway/"},"frontmatter":{"title":"AWS API Gateway"}}},{"node":{"id":"5b5a9934-3d6b-5d4f-919e-d6c81cd9883b","fields":{"slug":"/ColdStart/"},"frontmatter":{"title":"ColdStart"}}},{"node":{"id":"4d66fd32-495b-53b7-a5e6-0b4352890ad6","fields":{"slug":"/Serverless/"},"frontmatter":{"title":"Serverless"}}},{"node":{"id":"cf58cd45-e5c1-5cdc-beb9-e020f0c196c2","fields":{"slug":"/Dynamo-DB/"},"frontmatter":{"title":"Dynamo DB"}}},{"node":{"id":"b28d0ff6-a8f2-57fb-8424-2338940e34f1","fields":{"slug":"/NoSQL/"},"frontmatter":{"title":"NoSQL"}}},{"node":{"id":"75004652-bd2c-508c-a7db-04db313b1921","fields":{"slug":"/REST/"},"frontmatter":{"title":"REST"}}},{"node":{"id":"56f7be0e-73aa-5dad-98d8-f9ac6348bf1a","fields":{"slug":"/TypeError-non-default-argument-content-follows-default-argument/"},"frontmatter":{"title":"TypeError: non-default argument 'content' follows default argument"}}},{"node":{"id":"e5695f18-889e-587d-a870-634628d77470","fields":{"slug":"/브랜치-관리-전략/"},"frontmatter":{"title":"브랜치 관리 전략"}}},{"node":{"id":"d30c0163-0c3a-5b50-bf43-415f6c40b205","fields":{"slug":"/Unit-Test단위-테스트/"},"frontmatter":{"title":"Unit Test(단위 테스트)"}}},{"node":{"id":"8ec56025-47e8-50a0-b09d-bcebf7f5f38f","fields":{"slug":"/__post_init__/"},"frontmatter":{"title":"__post_init__"}}},{"node":{"id":"de1d75f6-399b-5a3a-b601-5a03f25b235d","fields":{"slug":"/dataclass/"},"frontmatter":{"title":"dataclass"}}},{"node":{"id":"a35d8a33-bdfd-5002-a95d-5864be533e04","fields":{"slug":"/FastAPI와-DDD/"},"frontmatter":{"title":"FastAPI와 DDD"}}},{"node":{"id":"a66f0e3d-4d3f-54ac-9189-5ae58e2f030d","fields":{"slug":"/vercel-배포-자동화/"},"frontmatter":{"title":"vercel 배포 자동화"}}},{"node":{"id":"f5b436db-918e-5d7a-9a05-6f44804bf7a4","fields":{"slug":"/AWS-ECSElastic-Container-Service/"},"frontmatter":{"title":"AWS ECS(Elastic Container Service)"}}},{"node":{"id":"f3769235-6b0c-590e-a146-9db1a2921b37","fields":{"slug":"/Blue-Green-Deploy-전략/"},"frontmatter":{"title":"Blue Green Deploy 전략"}}},{"node":{"id":"ea674275-fe3d-5860-a6d2-ac5fd6bbbd63","fields":{"slug":"/CloudFront/"},"frontmatter":{"title":"CloudFront"}}},{"node":{"id":"24501bbd-a049-5cde-b25d-91f5d6d81ad0","fields":{"slug":"/Poetry/"},"frontmatter":{"title":"Poetry"}}},{"node":{"id":"9363605d-e029-574d-850d-fe8e3d772c14","fields":{"slug":"/DynamoDB의-동시성-제어Concurrency-Control/"},"frontmatter":{"title":"DynamoDB의 동시성 제어(Concurrency Control)"}}},{"node":{"id":"f6954f71-a760-58ae-8db7-b7d7dbab417b","fields":{"slug":"/FastAPI/"},"frontmatter":{"title":"FastAPI"}}},{"node":{"id":"22d5ecd2-8499-51ec-bcee-10e7c6a65e0c","fields":{"slug":"/Pydantic-모델/"},"frontmatter":{"title":"Pydantic 모델"}}},{"node":{"id":"1430f86d-737b-54d9-ad6e-ed0da064204b","fields":{"slug":"/FastAPI의-데코레이터/"},"frontmatter":{"title":"FastAPI의 데코레이터"}}},{"node":{"id":"09aa2640-b779-5d7e-821e-fdcbc810306e","fields":{"slug":"/생성기generate-패턴/"},"frontmatter":{"title":"생성기(generate) 패턴"}}},{"node":{"id":"19a83676-7ebb-5df2-89ee-aad5db0ac510","fields":{"slug":"/FastAPI와-asyncio/"},"frontmatter":{"title":"FastAPI와 asyncio"}}},{"node":{"id":"a46250f3-70a4-51a8-99dc-7f8a19e25f30","fields":{"slug":"/FastAPI에서-데코레이터와-Dependency/"},"frontmatter":{"title":"FastAPI에서 데코레이터와 Dependency"}}},{"node":{"id":"e73d2f23-e559-5fd0-b823-3a905a7b23bc","fields":{"slug":"/aiohttp/"},"frontmatter":{"title":"aiohttp"}}},{"node":{"id":"e1614069-fb05-50dc-b571-09619b8b3812","fields":{"slug":"/단축어로-SLACK-프로필-변경하기/"},"frontmatter":{"title":"단축어로 SLACK 프로필 변경하기"}}},{"node":{"id":"e54bc742-9cf7-5c9e-bf8c-7c89cdc68f03","fields":{"slug":"/PynamoDB와-boto3-PynamoDB의-커넥션/"},"frontmatter":{"title":"PynamoDB와 boto3, PynamoDB의 커넥션"}}},{"node":{"id":"56d966ae-83d3-5173-96bb-1656a67b886e","fields":{"slug":"/FastAPI에서-Postgresql의-커넥션-관리/"},"frontmatter":{"title":"FastAPI에서 Postgresql의 커넥션 관리"}}},{"node":{"id":"ffa35bb9-59f6-5d00-a171-3df68d55bc94","fields":{"slug":"/Sqlalchemy-비동기-엔진에서의-Postgresql-Pooler/"},"frontmatter":{"title":"Sqlalchemy 비동기 엔진에서의 Postgresql Pooler"}}},{"node":{"id":"ac6be9fb-f651-5a8b-abe8-875e5c9c5e86","fields":{"slug":"/SqlAlchemy의-QueuePool/"},"frontmatter":{"title":"SqlAlchemy의 QueuePool"}}},{"node":{"id":"c58328fc-45ee-535d-bbd0-11c63e6f91d3","fields":{"slug":"/Union-Type/"},"frontmatter":{"title":"Union Type"}}},{"node":{"id":"3d7c4789-600c-5652-baf1-072ee0673b52","fields":{"slug":"/우분투-용량-관리/"},"frontmatter":{"title":"우분투 용량 관리"}}},{"node":{"id":"2f0bdc06-8ac6-5591-952a-2fa5601cb02c","fields":{"slug":"/Sqlalchemy에서의-트랜잭션-격리-수준-구현/"},"frontmatter":{"title":"Sqlalchemy에서의 트랜잭션 격리 수준 구현"}}},{"node":{"id":"1f5f9a99-fd2f-5150-b295-3ce29b5ab2ad","fields":{"slug":"/트랜잭션-격리-수준Transaction-Isolation-Level/"},"frontmatter":{"title":"트랜잭션 격리 수준(Transaction Isolation Level)"}}},{"node":{"id":"8e27233b-d081-512d-9e66-3fe55b19003e","fields":{"slug":"/PostgreSQL-Advisory-Locks-트랜잭션-레벨에서-구현/"},"frontmatter":{"title":"PostgreSQL Advisory Locks 트랜잭션 레벨에서 구현"}}},{"node":{"id":"eec75730-fbf0-5ffb-a69c-7e5d33807c69","fields":{"slug":"/Sqlalchemy의-func/"},"frontmatter":{"title":"Sqlalchemy의 func"}}},{"node":{"id":"5a91da05-b806-550d-9ec8-cc7981485589","fields":{"slug":"/동시성-제어문제-해결/"},"frontmatter":{"title":"동시성 제어문제 해결"}}},{"node":{"id":"ecef9814-4c6f-5617-9bb1-1c5f56e0b5f7","fields":{"slug":"/vscode-quick-Suggestions/"},"frontmatter":{"title":"vscode-quick Suggestions"}}}]},"previous":{"fields":{"slug":"/NotionAPI를-활용한-자동-포스팅6/"},"frontmatter":{"title":"NotionAPI를 활용한 자동 포스팅(6)"}},"next":{"fields":{"slug":"/트랜잭션-격리-수준Transaction-Isolation-Level/"},"frontmatter":{"title":"트랜잭션 격리 수준(Transaction Isolation Level)"}}},"pageContext":{"id":"2f0bdc06-8ac6-5591-952a-2fa5601cb02c","series":null,"previousPostId":"c02f0372-ab45-58a3-bae4-46ca360220b2","nextPostId":"1f5f9a99-fd2f-5150-b295-3ce29b5ab2ad"}},"staticQueryHashes":[],"slicesMap":{}}