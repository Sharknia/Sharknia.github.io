{"componentChunkName":"component---src-templates-post-jsx","path":"/Sqlalchemy에서의-트랜잭션-격리-수준-구현/","result":{"data":{"site":{"siteMetadata":{"title":"SharkniA"}},"markdownRemark":{"id":"b13d92a7-a846-5ceb-bf1c-8164da4ca0b9","excerpt":"구현 목적 상품 구매에 관련된 API를 구현하려고 한다. DynamoDB를 사용할 때에 동시성 이슈로 쿠폰 중복 구매 이슈가 있었으므로 이번에 RDS로 옮긴 김에 해당 문제를 완벽하게 해결하기 위해 다각도로 방법을 고민했다.  그 방안 중 하나가 트랜잭션 격리 수준(Transaction Isolation Level) 을 이용한 것이다.  SqlAlchem…","html":"<h2>구현 목적</h2>\n<p>상품 구매에 관련된 API를 구현하려고 한다. DynamoDB를 사용할 때에 동시성 이슈로 쿠폰 중복 구매 이슈가 있었으므로 이번에 RDS로 옮긴 김에 해당 문제를 완벽하게 해결하기 위해 다각도로 방법을 고민했다. </p>\n<p>그 방안 중 하나가 <a href=\"https://sharknia.github.io/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%EA%B2%A9%EB%A6%AC-%EC%88%98%EC%A4%80Transaction-Isolation-Level\">트랜잭션 격리 수준(Transaction Isolation Level)</a> 을 이용한 것이다. </p>\n<p>SqlAlchemy - Postgresql을 사용하고 있는데, 이 라이브러리에서 트랜잭션 격리 수준을 어떻게 구현했는지 기록한다. </p>\n<h2>현재</h2>\n<p>현재에는 기본 격리 수준을 사용한(별다른 옵션값이 없는) 엔진만 사용하고 있다. API 별로 별도의 세션을 사용하기 위해 의존성 주입 방식을 사용하며, 이를 위해 <code class=\"language-text\">AsyncIterable[AsyncSession]</code>을 생성한다. 대략적인 코드는 다음과 같다. </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">_db_connection<span class=\"token punctuation\">:</span> AsyncEngine\n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">on_startup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    _db_connection <span class=\"token operator\">=</span> create_async_engine<span class=\"token punctuation\">(</span>\n        DATABASE_URL<span class=\"token punctuation\">,</span>\n        pool_size<span class=\"token operator\">=</span>pool_size<span class=\"token punctuation\">,</span>\n        max_overflow<span class=\"token operator\">=</span>max_overflow<span class=\"token punctuation\">,</span>\n        echo<span class=\"token operator\">=</span>echo<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">get_db_connection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> AsyncEngine<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">assert</span> _db_connection <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span>\n    <span class=\"token keyword\">return</span> _db_connection\n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">get_db_session</span><span class=\"token punctuation\">(</span>\n    db_conn<span class=\"token punctuation\">:</span> AsyncEngine <span class=\"token operator\">=</span> Depends<span class=\"token punctuation\">(</span>get_db_connection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> AsyncIterable<span class=\"token punctuation\">[</span>AsyncSession<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    session <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> sessionmaker<span class=\"token punctuation\">(</span>\n            db_conn<span class=\"token punctuation\">,</span>\n            class_<span class=\"token operator\">=</span>AsyncSession<span class=\"token punctuation\">,</span>\n            expire_on_commit<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> session<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">yield</span> session\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[get_db_session] </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>e<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">await</span> session<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">raise</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> session<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">await</span> session<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>그리고 각 API의 엔드포인트에서 get<em>db</em>session을 주입받아 사용한다. </p>\n<p>이 엔진은 기본적으로 Read Committed 격리수준만 지원한다. </p>\n<h2>모험</h2>\n<h3>sessionmaker 레벨에서 트랜잭션 격리 수준 설정?</h3>\n<p>이렇게 내용이 조금만 깊어져도 챗지피티는 믿을 놈이 못된다. 챗지피티에서는 sessionmaker 레벨에서 트랜잭션 격리 수준 설정이 가능하다며, sessionmaker의 매개변수에 <code class=\"language-text\">isolation_level=\"SERIALIZABLE”</code> 를 추가해주면 된다고 주장한다. </p>\n<p>하지만 sessionmaker의 생성자에는 <code class=\"language-text\">isolation_level</code> 매개 변수가 없어 해당 설정은 바로 오류를 낸다. 이럴 경우 답은 스스로 해결하는 것 밖에 없다. </p>\n<h3>트랜잭션 별 엔진 별도 생성?</h3>\n<p>첫 구현은 단순하게 생각해서 엔진을 여러개를 만들었다. 즉, <code class=\"language-text\">isolation_level</code> 옵션을 각각 다르게 준create<em>async</em>engine을 여러번 하는 것이다. 이러면 간단하게 해결이 된다. 하지만 이렇게 할 경우에는 문제가 있다. 각각의 엔진이 모두 별도의 풀을 생성하면서 의도치 않게 커넥션이 증가할 위험이 있는 것이다. 안그래도 <a href=\"https://sharknia.github.io/SqlAlchemy%EC%9D%98-QueuePool\">SqlAlchemy의 QueuePool</a> 를 겪었었기 때문에 해당 이슈는 꼭 피하고 싶었다. </p>\n<h2>개선(해결)</h2>\n<p>코드를 짜다보면 “이건 있어야 하는데?”라고 느낄때가 있다. 그런것들은 대부분, 너무 미완성인 라이브러리나 프레임워크가 아니라면 반드시 나온다. 구현 가능한데 필요성을 느끼는 것은 반드시 누군가 만들어둔 것이다. </p>\n<p>명확하게 다른 엔진이면서 풀을 공유하는 방법이 존재한다. <code class=\"language-text\">execution_options()</code> 를 사용하면 된다. </p>\n<h3>execution_options()</h3>\n<p><code class=\"language-text\">AsyncEngine</code>에서 <code class=\"language-text\">execution_options()</code> 메소드를 사용하면 반환되는 엔진도 <code class=\"language-text\">AsyncEngine</code> 타입이 된다. 이 메소드는 Engine, Connection, Session 객체에서도 사용할 수 있으며, 특정 실행 옵션을 동적으로 설정하거나 변경하기 위해 사용된다. </p>\n<p>이 메소드를 사용하면 동일한 연결 풀을 공유하면서도 다른 실행 옵션을 가진 엔진을 생성할 수 있다. </p>\n<p>개선된 코드는 다음과 같다. </p>\n<p><em>db</em>connection 설정 후, <em>db</em>connection<em>serializable를 `execution</em>options()` 를 사용해 정의한다. </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">_db_connection_serializable <span class=\"token operator\">=</span> _db_connection<span class=\"token punctuation\">.</span>execution_options<span class=\"token punctuation\">(</span>\n        isolation_level<span class=\"token operator\">=</span><span class=\"token string\">\"SERIALIZABLE\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span></code></pre></div>\n<p>해당 값을 사용한 의존성 주입용 메소드를 선언한다. </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">get_db_connection_serializable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> AsyncEngine<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">assert</span> _db_connection_serializable <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span>\n    <span class=\"token keyword\">return</span> _db_connection_serializable\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">get_serializable_db_session</span><span class=\"token punctuation\">(</span>\n    db_conn<span class=\"token punctuation\">:</span> AsyncEngine <span class=\"token operator\">=</span> Depends<span class=\"token punctuation\">(</span>get_db_connection_serializable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> AsyncIterable<span class=\"token punctuation\">[</span>AsyncSession<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n    session <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> sessionmaker<span class=\"token punctuation\">(</span>\n            db_conn<span class=\"token punctuation\">,</span>\n            class_<span class=\"token operator\">=</span>AsyncSession<span class=\"token punctuation\">,</span>\n            expire_on_commit<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> session<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">yield</span> session\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[get_serializable_db_session] </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>e<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> session<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">await</span> session<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">raise</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> session<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">await</span> session<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이제 엔드포인트에서 기존 get<em>db</em>session 대신 이 메소드를 사용하면 다른 옵션의 격리 레벨을 사용할 수 있다!</p>","frontmatter":{"title":"Sqlalchemy에서의 트랜잭션 격리 수준 구현","date":"January 29, 2024","update":"February 02, 2024","tags":["SqlAlchemy","DataBase","Python","Work"],"series":null},"fields":{"slug":"/Sqlalchemy에서의-트랜잭션-격리-수준-구현/","readingTime":{"minutes":5.145}}},"seriesList":{"edges":[{"node":{"id":"00a77006-3818-58af-bda3-49bb95a478d4","fields":{"slug":"/화상상담을-위한-Janus-구성/"},"frontmatter":{"title":"화상상담을 위한 Janus 구성"}}},{"node":{"id":"9b87562c-3e43-5ec2-a1a1-06c53d1c675c","fields":{"slug":"/JavaScript의-특징-브라우저-동작-원리/"},"frontmatter":{"title":"JavaScript의 특징, 브라우저 동작 원리"}}},{"node":{"id":"26f64d7f-43cb-5003-ab09-34e08a4f9fa3","fields":{"slug":"/JavaScript-기본-문법/"},"frontmatter":{"title":"JavaScript 기본 문법"}}},{"node":{"id":"fa695bf5-57e6-5bf0-bd58-12c299a86f2e","fields":{"slug":"/JavaScript의-변수/"},"frontmatter":{"title":"JavaScript의 변수"}}},{"node":{"id":"5948222d-3860-5d05-963f-f2b869b4a716","fields":{"slug":"/JavaScript의-타입-변환과-단축-평가/"},"frontmatter":{"title":"JavaScript의 타입 변환과 단축 평가"}}},{"node":{"id":"2da8d381-203a-5484-b874-ecda0760765e","fields":{"slug":"/JavaScript-클로저/"},"frontmatter":{"title":"JavaScript 클로저"}}},{"node":{"id":"de8049ee-f319-539d-8b4d-a9401ffc7052","fields":{"slug":"/NestJS-소개/"},"frontmatter":{"title":"NestJS 소개"}}},{"node":{"id":"d1ee1dfa-292a-532f-8ab3-487a9575d65a","fields":{"slug":"/DB-튜닝-경험/"},"frontmatter":{"title":"DB 튜닝 경험"}}},{"node":{"id":"65ef6804-a370-5087-936b-4c0568b19714","fields":{"slug":"/MORETHAN-LOG-설치/"},"frontmatter":{"title":"MORETHAN-LOG 설치"}}},{"node":{"id":"0c073300-9bbf-5968-903d-972daddca62a","fields":{"slug":"/RDB관계형-데이터베이스-RDBMS/"},"frontmatter":{"title":"RDB(관계형 데이터베이스) + RDBMS"}}},{"node":{"id":"615dae84-f7e1-5e94-87a1-a0a6ea28f0ee","fields":{"slug":"/var와-letconst/"},"frontmatter":{"title":"var와 let,const"}}},{"node":{"id":"b93488ac-2c0a-5e6c-b76f-0f65b73c20cb","fields":{"slug":"/MORETHAN-LOG-수정/"},"frontmatter":{"title":"MORETHAN-LOG 수정"}}},{"node":{"id":"c44bb53c-f3c1-537f-bf08-2469a8afc71e","fields":{"slug":"/NestJS-설치/"},"frontmatter":{"title":"NestJS 설치"}}},{"node":{"id":"3d415bd8-543d-58ab-806f-17140e82b34d","fields":{"slug":"/NestJS의-디렉토리-구조/"},"frontmatter":{"title":"NestJS의 디렉토리 구조"}}},{"node":{"id":"5fccef8c-d9be-5c31-b47e-a38562d70cde","fields":{"slug":"/웹-사이트-프로젝트-vs-웹-응용-프로그램-프로젝트/"},"frontmatter":{"title":"웹 사이트 프로젝트 vs 웹 응용 프로그램 프로젝트"}}},{"node":{"id":"a052bb08-8fc2-598f-9b5b-218eb727933e","fields":{"slug":"/Nuget-패키지-dll-추출/"},"frontmatter":{"title":"Nuget 패키지 dll 추출"}}},{"node":{"id":"d5eefb78-162d-5c44-80e5-e08b0afc6282","fields":{"slug":"/무료-웹-호스팅-비교/"},"frontmatter":{"title":"무료 웹 호스팅 비교"}}},{"node":{"id":"04f440ee-551d-5e36-a047-f56b38f89ab3","fields":{"slug":"/PRG-패턴-PostRedirectGet/"},"frontmatter":{"title":"PRG 패턴 (Post/Redirect/Get)"}}},{"node":{"id":"a76404d9-9edd-5175-8d95-bd2f476cdfbb","fields":{"slug":"/Python-venv-Windows/"},"frontmatter":{"title":"Python venv (Windows)"}}},{"node":{"id":"6065e14b-bb9f-532d-a34f-236409f4ea86","fields":{"slug":"/print와-pprint/"},"frontmatter":{"title":"print와 pprint"}}},{"node":{"id":"4ec48bde-bee2-5948-9f21-638952ab1af0","fields":{"slug":"/정규화와-역정규화/"},"frontmatter":{"title":"정규화와 역정규화"}}},{"node":{"id":"fee328a3-dfc2-5c47-8023-9b6685d6bc3a","fields":{"slug":"/트래픽-튜닝/"},"frontmatter":{"title":"트래픽 튜닝"}}},{"node":{"id":"a8b5dbc3-78fd-59b7-826a-a7915052f4dd","fields":{"slug":"/npx/"},"frontmatter":{"title":"npx"}}},{"node":{"id":"6a68ac7e-0292-5643-9d75-fdf9a57d32db","fields":{"slug":"/Branch/"},"frontmatter":{"title":"Branch"}}},{"node":{"id":"c44faec0-9520-54c4-80ae-be2c30cc098b","fields":{"slug":"/DataTable-클래스/"},"frontmatter":{"title":"DataTable 클래스"}}},{"node":{"id":"5207d586-fb17-555a-98df-511914e0e7de","fields":{"slug":"/Typescript-시작하기/"},"frontmatter":{"title":"Typescript 시작하기"}}},{"node":{"id":"37794a8d-0982-53e2-a47c-e85307bba925","fields":{"slug":"/gitignore/"},"frontmatter":{"title":"gitignore"}}},{"node":{"id":"afe6dd13-eac6-5d2f-89d0-a51cba20e3ac","fields":{"slug":"/Factory-Pattern/"},"frontmatter":{"title":"Factory Pattern"}}},{"node":{"id":"cfb70bd8-48d0-54d8-85b0-174bfc3b9913","fields":{"slug":"/네이밍-규칙naming-conventions/"},"frontmatter":{"title":"네이밍 규칙(naming conventions)"}}},{"node":{"id":"4a1706c9-ebf6-52b1-9b32-e6823b8ce2a3","fields":{"slug":"/AWS-API-Gateway/"},"frontmatter":{"title":"AWS API Gateway"}}},{"node":{"id":"66a2c53a-7aca-5455-8090-352c0114ad89","fields":{"slug":"/ColdStart/"},"frontmatter":{"title":"ColdStart"}}},{"node":{"id":"5453d052-2e7f-5829-8b85-d433ca451d68","fields":{"slug":"/Serverless/"},"frontmatter":{"title":"Serverless"}}},{"node":{"id":"249f2c76-8e1f-5c9b-b23c-5f2dfa0e6539","fields":{"slug":"/Dynamo-DB/"},"frontmatter":{"title":"Dynamo DB"}}},{"node":{"id":"861f8d0f-03a0-56d2-b5e0-1c6f7eb5885f","fields":{"slug":"/NoSQL/"},"frontmatter":{"title":"NoSQL"}}},{"node":{"id":"c7decc77-296b-594b-a67e-94a28644b631","fields":{"slug":"/REST/"},"frontmatter":{"title":"REST"}}},{"node":{"id":"2f7e8bc3-4cf6-57ec-9317-0f160a7d4df2","fields":{"slug":"/TypeError-non-default-argument-content-follows-default-argument/"},"frontmatter":{"title":"TypeError: non-default argument 'content' follows default argument"}}},{"node":{"id":"0147b10f-83b7-5583-b23b-04def80c0817","fields":{"slug":"/브랜치-관리-전략/"},"frontmatter":{"title":"브랜치 관리 전략"}}},{"node":{"id":"8af31d09-cd75-584c-bb2e-bcb44fd0ab07","fields":{"slug":"/Unit-Test단위-테스트/"},"frontmatter":{"title":"Unit Test(단위 테스트)"}}},{"node":{"id":"6624b432-dede-5d27-893c-216435f81dfc","fields":{"slug":"/__post_init__/"},"frontmatter":{"title":"__post_init__"}}},{"node":{"id":"c9205ad4-3b94-5f9b-9873-ceed541116b9","fields":{"slug":"/dataclass/"},"frontmatter":{"title":"dataclass"}}},{"node":{"id":"8e311167-515e-5479-806d-576655d5aa6d","fields":{"slug":"/FastAPI와-DDD/"},"frontmatter":{"title":"FastAPI와 DDD"}}},{"node":{"id":"80faec5b-ac3c-55f4-8278-c5df45eeaeee","fields":{"slug":"/vercel-배포-자동화/"},"frontmatter":{"title":"vercel 배포 자동화"}}},{"node":{"id":"a596c40a-9b38-51b3-83ba-4822bd6ad215","fields":{"slug":"/AWS-ECSElastic-Container-Service/"},"frontmatter":{"title":"AWS ECS(Elastic Container Service)"}}},{"node":{"id":"af893e8d-1d43-5da0-b92e-fca9abfbdaea","fields":{"slug":"/Blue-Green-Deploy-전략/"},"frontmatter":{"title":"Blue Green Deploy 전략"}}},{"node":{"id":"0f61c80f-0860-5374-9507-690750d8738d","fields":{"slug":"/CloudFront/"},"frontmatter":{"title":"CloudFront"}}},{"node":{"id":"da0900a9-d1a3-5f11-b1a7-c2b1b79a025b","fields":{"slug":"/Poetry/"},"frontmatter":{"title":"Poetry"}}},{"node":{"id":"496bf14d-cf6f-551c-968d-c356aea3d9b1","fields":{"slug":"/DynamoDB의-동시성-제어Concurrency-Control/"},"frontmatter":{"title":"DynamoDB의 동시성 제어(Concurrency Control)"}}},{"node":{"id":"6fcbdee7-120b-57bd-b0c2-4c046589430b","fields":{"slug":"/FastAPI/"},"frontmatter":{"title":"FastAPI"}}},{"node":{"id":"2e1a8c7e-a8ad-58ac-9795-449d177048c6","fields":{"slug":"/Pydantic-모델/"},"frontmatter":{"title":"Pydantic 모델"}}},{"node":{"id":"e967fbe2-df8c-5d69-b5d6-13133817266e","fields":{"slug":"/FastAPI의-데코레이터/"},"frontmatter":{"title":"FastAPI의 데코레이터"}}},{"node":{"id":"4a995071-315b-57e1-8b9f-d6caa89ec351","fields":{"slug":"/생성기generate-패턴/"},"frontmatter":{"title":"생성기(generate) 패턴"}}},{"node":{"id":"4bd6f525-f59f-5917-9c63-bfee49948344","fields":{"slug":"/FastAPI에서-데코레이터와-Dependency/"},"frontmatter":{"title":"FastAPI에서 데코레이터와 Dependency"}}},{"node":{"id":"c1d8f764-63e6-5920-af1d-cc6ed82cab31","fields":{"slug":"/FastAPI와-asyncio/"},"frontmatter":{"title":"FastAPI와 asyncio"}}},{"node":{"id":"100f4f92-fdaa-53c8-93e5-96509170e2f3","fields":{"slug":"/aiohttp/"},"frontmatter":{"title":"aiohttp"}}},{"node":{"id":"eb8cca17-daa2-5b06-806b-3f96b650e68e","fields":{"slug":"/단축어로-SLACK-프로필-변경하기/"},"frontmatter":{"title":"단축어로 SLACK 프로필 변경하기"}}},{"node":{"id":"3aa5fd9e-e7a6-5d5d-b388-cced68004144","fields":{"slug":"/PynamoDB와-boto3-PynamoDB의-커넥션/"},"frontmatter":{"title":"PynamoDB와 boto3, PynamoDB의 커넥션"}}},{"node":{"id":"79b9b7d1-4816-53bd-a9be-1a42a3addf69","fields":{"slug":"/FastAPI에서-Postgresql의-커넥션-관리/"},"frontmatter":{"title":"FastAPI에서 Postgresql의 커넥션 관리"}}},{"node":{"id":"9d31ab39-c391-5100-8b1a-57e082219f0f","fields":{"slug":"/Sqlalchemy-비동기-엔진에서의-Postgresql-Pooler/"},"frontmatter":{"title":"Sqlalchemy 비동기 엔진에서의 Postgresql Pooler"}}},{"node":{"id":"3c324741-c5af-5c92-a470-0093a3060c01","fields":{"slug":"/SqlAlchemy의-QueuePool/"},"frontmatter":{"title":"SqlAlchemy의 QueuePool"}}},{"node":{"id":"31479f72-375a-5d24-94d4-33e54c6d4b93","fields":{"slug":"/Pydantic-Model의-응용/"},"frontmatter":{"title":"Pydantic Model의 응용"}}},{"node":{"id":"280d0c1b-b14b-58e2-8adc-a140de967ea2","fields":{"slug":"/Union-Type/"},"frontmatter":{"title":"Union Type"}}},{"node":{"id":"e9509d5a-bdcd-5cf1-ac9f-75030f0bd9f7","fields":{"slug":"/우분투-용량-관리/"},"frontmatter":{"title":"우분투 용량 관리"}}},{"node":{"id":"b13d92a7-a846-5ceb-bf1c-8164da4ca0b9","fields":{"slug":"/Sqlalchemy에서의-트랜잭션-격리-수준-구현/"},"frontmatter":{"title":"Sqlalchemy에서의 트랜잭션 격리 수준 구현"}}},{"node":{"id":"770b4205-c82e-5645-b778-249d6eaa698e","fields":{"slug":"/트랜잭션-격리-수준Transaction-Isolation-Level/"},"frontmatter":{"title":"트랜잭션 격리 수준(Transaction Isolation Level)"}}},{"node":{"id":"b90cac43-c3fb-5909-a246-c732a3e8654e","fields":{"slug":"/PostgreSQL-Advisory-Locks-트랜잭션-레벨에서-구현/"},"frontmatter":{"title":"PostgreSQL Advisory Locks 트랜잭션 레벨에서 구현"}}},{"node":{"id":"c714646b-b50c-5276-ae7c-48259930dcf2","fields":{"slug":"/Sqlalchemy의-func/"},"frontmatter":{"title":"Sqlalchemy의 func"}}},{"node":{"id":"f5517be6-c8c2-576d-a17d-33f22f4c9bf7","fields":{"slug":"/동시성-제어문제-해결/"},"frontmatter":{"title":"동시성 제어문제 해결"}}},{"node":{"id":"6dd955b3-f181-577e-ac9a-ca78332aabd9","fields":{"slug":"/vscode-quick-Suggestions/"},"frontmatter":{"title":"vscode-quick Suggestions"}}},{"node":{"id":"048cbee4-4ec0-520d-abe1-1327446f88cb","fields":{"slug":"/NotionAPI를-활용한-자동-포스팅10/"},"frontmatter":{"title":"NotionAPI를 활용한 자동 포스팅(10)"}}},{"node":{"id":"2a57e1ce-076a-5342-b603-cd621e327fc3","fields":{"slug":"/Typescript의-열거형/"},"frontmatter":{"title":"Typescript의 열거형"}}}]},"previous":{"fields":{"slug":"/NotionAPI를-활용한-자동-포스팅6/"},"frontmatter":{"title":"NotionAPI를 활용한 자동 포스팅(6)"}},"next":{"fields":{"slug":"/트랜잭션-격리-수준Transaction-Isolation-Level/"},"frontmatter":{"title":"트랜잭션 격리 수준(Transaction Isolation Level)"}}},"pageContext":{"id":"b13d92a7-a846-5ceb-bf1c-8164da4ca0b9","series":null,"previousPostId":"9cca374d-ff65-5a66-8343-1e26af2ffd38","nextPostId":"770b4205-c82e-5645-b778-249d6eaa698e"}},"staticQueryHashes":[],"slicesMap":{}}