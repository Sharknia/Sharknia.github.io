{"componentChunkName":"component---src-templates-post-jsx","path":"/AWS-ECSElastic-Container-Service/","result":{"data":{"site":{"siteMetadata":{"title":"SharkniA"}},"markdownRemark":{"id":"a596c40a-9b38-51b3-83ba-4822bd6ad215","excerpt":"개요 AWS ECS는 Docker 컨테이너를 쉽게 실행, 중지 및 관리할 수 있도록 해주는 컨테이너 오케스트레이션 서비스이다. 컨테이너 배포, 작업 정의, 서비스 정의, 클러스터 관리 등을 지원한다.  오케스트레이션 서비스란? 컨테이너의 배포, 관리, 스케일링, 네트워킹 및 가용성을 자동화하는 프로세스 및 도구의 집합이다.  즉, 컨테이너화된 애플리케이션…","html":"<h2>개요</h2>\n<p>AWS ECS는 Docker 컨테이너를 쉽게 실행, 중지 및 관리할 수 있도록 해주는 컨테이너 오케스트레이션 서비스이다. 컨테이너 배포, 작업 정의, 서비스 정의, 클러스터 관리 등을 지원한다. </p>\n<h3>오케스트레이션 서비스란?</h3>\n<ul>\n<li>컨테이너의 배포, 관리, 스케일링, 네트워킹 및 가용성을 자동화하는 프로세스 및 도구의 집합이다. </li>\n<li>즉, 컨테이너화된 애플리케이션의 라이프사이클을 관리하는 것을 의미한다. </li>\n</ul>\n<h2>주요 특징</h2>\n<h3>서비스</h3>\n<p>여러 개의 작업 인스턴스를 관리하며, 로드 밸런싱과 함께 사용하여 트래픽 분산을 지원한다. </p>\n<h3>클러스터</h3>\n<p>컨테이너를 실행하는데 사용되는 논리적인 그룹이다. ECS에서 실행되는 리소스의 집합을 의미한다. 클러스터는 EC2 인스턴스나 Fargate 인스턴스를 포함할 수 있다. </p>\n<p>클러스터를 사용하여 워크로드와 관련된 리소스를 논리적으로 그룹화 할 수 있다. 예를 들면 <strong>“production” 클러스터와 “development” 클러스터를 별도로 운영할 수 있다.</strong> </p>\n<p>기본적으로 단순한 논리적 이름을 지닌 메타 데이터 구조체로, 클러스터 안의 실제 컴퓨팅 리소스와 독립적이다. </p>\n<h3>네임스페이스</h3>\n<p>리소스를 논리적으로 분리하고 관리하기 위한 도구이다. 동일한 도메인 이름 아래에서 운영되는 서비스들의 논리적 그룹의 형성에 사용된다. </p>\n<h3>테스크</h3>\n<p>단일 컨테이너 또는 여러 컨테이너의 그룹이다. </p>\n<p><code class=\"language-text\">작업 정의</code> : 컨테이너의 속성을 정의하는 JSON 템플릿이다. CPU, 메모리 할당, 네트워크 모드, 사용할 도커 이미지 등을 포함한다. </p>\n<p>테스크는 작업 정의에 정의된 내용에 따라 실행된다. 예를 들면 웹 서버와 관련된 데이터베이스를 함께 실행하는 테스크를 생성할 수 있다. </p>\n<h2>순서와 구조</h2>\n<ol>\n<li>\n<p>컨테이너</p>\n<p>독립적으로 실행 가능한 소프트웨어의 최소 단위. AWS ECS에서는 이 컨테이너를 EC2 인스턴스나 Fargate에서 실행할 수 있다.  </p>\n</li>\n<li>\n<p>테스크</p>\n<p>ECS의 실행 단위, 하나 이상의 컨테이너로 구성됨</p>\n</li>\n<li>\n<p>클러스터</p>\n<p>테스크와 서비스를 실행하고 관리하는 논리적 단위</p>\n</li>\n<li>\n<p>네임스페이스</p>\n<p>서비스와 관련된 논리적 그룹을 형성</p>\n</li>\n<li>ECS</li>\n</ol>\n<p>각 단계는 이전 단계의 구성 요소를 더 큰 단위로 그룹화하거나 관리하는 역할을 한다. </p>\n<h2>웹 애플리케이션의 개발 후 ECS 배포</h2>\n<ol>\n<li>\n<p>웹 애플리케이션 개발</p>\n<p>웹 애플리케이션을 개발한다. </p>\n<p>로컬에서 테스트하여 작동을 확인한다. </p>\n</li>\n<li>\n<p>Docker 이미지 생성</p>\n<p><code class=\"language-text\">Dockerfile</code> 을 작성하여 웹애플리케이션을 컨테이너화 한다. </p>\n<p>로컬에서 Docker를 사용하여 이미지를 빌드하고 테스트한다. </p>\n</li>\n<li>\n<p>Docker 이미지를 ECR(Elastioc Container Registry)에 푸시</p>\n<p>AWS ECR에 저장소를 생성한다. </p>\n<p>로컬에서 빌드한 Docker 이미지를 ECR 저장소에 PUSH 한다. </p>\n</li>\n<li>\n<p>ECS 클러스터 및 작업 정의 설정</p>\n<p>ECS 클러스터를 생성한다. (Fargate 또는 EC2 인스턴스)</p>\n<p>작업 정의(Task Definition)을 생성한다. 작업 정의에는 ECR에수 푸시한 Docker 이미지, 필요한 CPU와 메모리, 환경 변수, 포트 매핑 등을 지정한다. </p>\n</li>\n<li>\n<p>ECS 서비스 생성</p>\n<p>ECS 클러스터 내에서 작업정의를 기반으로 서비스를 생성한다. 서비스를 사용하면 컨테이너의 실행 상태를 유지하거나 원하는 개수의 작업 인스턴스를 실행할 수 있다. </p>\n</li>\n<li>\n<p>도메인 및 DNS 설정</p>\n<p>AWS Route 53을 사용하여 도메인을 설정하고 ALB(Application Load Balancer) 의 주소를 해당 도메인에 연결한다. </p>\n</li>\n<li>보안 그룹 및 네트워크 설정</li>\n<li>모니터링 및 로깅</li>\n</ol>\n<h2>기존 서비스에서 ECS 기반 서비스로의 전환</h2>\n<ol>\n<li>ECS, Fargate 설정</li>\n<li>\n<p>ALB 설정</p>\n<p>Application Load Balancer를 생성한다. </p>\n<p>리스너와 타겟 그룹을 설정하여 ECS 서비스의 작업에 트래픽을 라우팅 하도록 한다. </p>\n</li>\n<li>\n<p>Route 53 업데이트</p>\n<p>현재 서비스에 연결된 Route53 레코드를 수정하여 ALB의 DNS 이름을 가리키도록 변경한다. </p>\n</li>\n<li>모니터링 및 튜닝</li>\n</ol>\n<h3>주의점</h3>\n<p>기본적으로는 CES, Fargate, ALB를 설정한 후 마지막 단계로 Route 53의 레코드 설정만 변경하면 트래픽은 새로운 ECS-Fargate 기반의 서비스로 라우팅된다. </p>\n<p>그러나 다음과 같은 주의 사항이 있다. </p>\n<ol>\n<li>\n<p>테스트 </p>\n<p>ALB와 ECS가 올바르게 작동하는지 사전에 충분히 테스트 해야 한다. </p>\n</li>\n<li>\n<p>DNS 전파 지연</p>\n<p>DNS 업데이트는 즉시 전파되지 않을 수 있다. 일부 사용자는 변경 전의 엔드포인트로 트래픽이 라우팅 될 수 있으므로 업데이트 후에도 기존 서비스를 적어도 몇 시간 동안 실행 상태로 유지하는 것이 좋다. </p>\n</li>\n<li>\n<p>롤백 계획</p>\n<p>문제가 발생할 경우를 대비하여 롤백 계획을 준비해야 한다. 예를 들어 새로운 서비스에 문제가 발생한 경우 Route 53 설정을 원래대로 돌릴 수 있어야 한다. </p>\n</li>\n</ol>","frontmatter":{"title":"AWS ECS(Elastic Container Service)","date":"October 25, 2023","update":"February 02, 2024","tags":["AWS"],"series":null},"fields":{"slug":"/AWS-ECSElastic-Container-Service/","readingTime":{"minutes":7.23}}},"seriesList":{"edges":[{"node":{"id":"00a77006-3818-58af-bda3-49bb95a478d4","fields":{"slug":"/화상상담을-위한-Janus-구성/"},"frontmatter":{"title":"화상상담을 위한 Janus 구성"}}},{"node":{"id":"9b87562c-3e43-5ec2-a1a1-06c53d1c675c","fields":{"slug":"/JavaScript의-특징-브라우저-동작-원리/"},"frontmatter":{"title":"JavaScript의 특징, 브라우저 동작 원리"}}},{"node":{"id":"26f64d7f-43cb-5003-ab09-34e08a4f9fa3","fields":{"slug":"/JavaScript-기본-문법/"},"frontmatter":{"title":"JavaScript 기본 문법"}}},{"node":{"id":"fa695bf5-57e6-5bf0-bd58-12c299a86f2e","fields":{"slug":"/JavaScript의-변수/"},"frontmatter":{"title":"JavaScript의 변수"}}},{"node":{"id":"5948222d-3860-5d05-963f-f2b869b4a716","fields":{"slug":"/JavaScript의-타입-변환과-단축-평가/"},"frontmatter":{"title":"JavaScript의 타입 변환과 단축 평가"}}},{"node":{"id":"2da8d381-203a-5484-b874-ecda0760765e","fields":{"slug":"/JavaScript-클로저/"},"frontmatter":{"title":"JavaScript 클로저"}}},{"node":{"id":"de8049ee-f319-539d-8b4d-a9401ffc7052","fields":{"slug":"/NestJS-소개/"},"frontmatter":{"title":"NestJS 소개"}}},{"node":{"id":"d1ee1dfa-292a-532f-8ab3-487a9575d65a","fields":{"slug":"/DB-튜닝-경험/"},"frontmatter":{"title":"DB 튜닝 경험"}}},{"node":{"id":"65ef6804-a370-5087-936b-4c0568b19714","fields":{"slug":"/MORETHAN-LOG-설치/"},"frontmatter":{"title":"MORETHAN-LOG 설치"}}},{"node":{"id":"0c073300-9bbf-5968-903d-972daddca62a","fields":{"slug":"/RDB관계형-데이터베이스-RDBMS/"},"frontmatter":{"title":"RDB(관계형 데이터베이스) + RDBMS"}}},{"node":{"id":"615dae84-f7e1-5e94-87a1-a0a6ea28f0ee","fields":{"slug":"/var와-letconst/"},"frontmatter":{"title":"var와 let,const"}}},{"node":{"id":"b93488ac-2c0a-5e6c-b76f-0f65b73c20cb","fields":{"slug":"/MORETHAN-LOG-수정/"},"frontmatter":{"title":"MORETHAN-LOG 수정"}}},{"node":{"id":"c44bb53c-f3c1-537f-bf08-2469a8afc71e","fields":{"slug":"/NestJS-설치/"},"frontmatter":{"title":"NestJS 설치"}}},{"node":{"id":"3d415bd8-543d-58ab-806f-17140e82b34d","fields":{"slug":"/NestJS의-디렉토리-구조/"},"frontmatter":{"title":"NestJS의 디렉토리 구조"}}},{"node":{"id":"5fccef8c-d9be-5c31-b47e-a38562d70cde","fields":{"slug":"/웹-사이트-프로젝트-vs-웹-응용-프로그램-프로젝트/"},"frontmatter":{"title":"웹 사이트 프로젝트 vs 웹 응용 프로그램 프로젝트"}}},{"node":{"id":"a052bb08-8fc2-598f-9b5b-218eb727933e","fields":{"slug":"/Nuget-패키지-dll-추출/"},"frontmatter":{"title":"Nuget 패키지 dll 추출"}}},{"node":{"id":"d5eefb78-162d-5c44-80e5-e08b0afc6282","fields":{"slug":"/무료-웹-호스팅-비교/"},"frontmatter":{"title":"무료 웹 호스팅 비교"}}},{"node":{"id":"04f440ee-551d-5e36-a047-f56b38f89ab3","fields":{"slug":"/PRG-패턴-PostRedirectGet/"},"frontmatter":{"title":"PRG 패턴 (Post/Redirect/Get)"}}},{"node":{"id":"a76404d9-9edd-5175-8d95-bd2f476cdfbb","fields":{"slug":"/Python-venv-Windows/"},"frontmatter":{"title":"Python venv (Windows)"}}},{"node":{"id":"6065e14b-bb9f-532d-a34f-236409f4ea86","fields":{"slug":"/print와-pprint/"},"frontmatter":{"title":"print와 pprint"}}},{"node":{"id":"4ec48bde-bee2-5948-9f21-638952ab1af0","fields":{"slug":"/정규화와-역정규화/"},"frontmatter":{"title":"정규화와 역정규화"}}},{"node":{"id":"fee328a3-dfc2-5c47-8023-9b6685d6bc3a","fields":{"slug":"/트래픽-튜닝/"},"frontmatter":{"title":"트래픽 튜닝"}}},{"node":{"id":"a8b5dbc3-78fd-59b7-826a-a7915052f4dd","fields":{"slug":"/npx/"},"frontmatter":{"title":"npx"}}},{"node":{"id":"6a68ac7e-0292-5643-9d75-fdf9a57d32db","fields":{"slug":"/Branch/"},"frontmatter":{"title":"Branch"}}},{"node":{"id":"c44faec0-9520-54c4-80ae-be2c30cc098b","fields":{"slug":"/DataTable-클래스/"},"frontmatter":{"title":"DataTable 클래스"}}},{"node":{"id":"5207d586-fb17-555a-98df-511914e0e7de","fields":{"slug":"/Typescript-시작하기/"},"frontmatter":{"title":"Typescript 시작하기"}}},{"node":{"id":"37794a8d-0982-53e2-a47c-e85307bba925","fields":{"slug":"/gitignore/"},"frontmatter":{"title":"gitignore"}}},{"node":{"id":"afe6dd13-eac6-5d2f-89d0-a51cba20e3ac","fields":{"slug":"/Factory-Pattern/"},"frontmatter":{"title":"Factory Pattern"}}},{"node":{"id":"cfb70bd8-48d0-54d8-85b0-174bfc3b9913","fields":{"slug":"/네이밍-규칙naming-conventions/"},"frontmatter":{"title":"네이밍 규칙(naming conventions)"}}},{"node":{"id":"4a1706c9-ebf6-52b1-9b32-e6823b8ce2a3","fields":{"slug":"/AWS-API-Gateway/"},"frontmatter":{"title":"AWS API Gateway"}}},{"node":{"id":"66a2c53a-7aca-5455-8090-352c0114ad89","fields":{"slug":"/ColdStart/"},"frontmatter":{"title":"ColdStart"}}},{"node":{"id":"5453d052-2e7f-5829-8b85-d433ca451d68","fields":{"slug":"/Serverless/"},"frontmatter":{"title":"Serverless"}}},{"node":{"id":"249f2c76-8e1f-5c9b-b23c-5f2dfa0e6539","fields":{"slug":"/Dynamo-DB/"},"frontmatter":{"title":"Dynamo DB"}}},{"node":{"id":"861f8d0f-03a0-56d2-b5e0-1c6f7eb5885f","fields":{"slug":"/NoSQL/"},"frontmatter":{"title":"NoSQL"}}},{"node":{"id":"c7decc77-296b-594b-a67e-94a28644b631","fields":{"slug":"/REST/"},"frontmatter":{"title":"REST"}}},{"node":{"id":"2f7e8bc3-4cf6-57ec-9317-0f160a7d4df2","fields":{"slug":"/TypeError-non-default-argument-content-follows-default-argument/"},"frontmatter":{"title":"TypeError: non-default argument 'content' follows default argument"}}},{"node":{"id":"0147b10f-83b7-5583-b23b-04def80c0817","fields":{"slug":"/브랜치-관리-전략/"},"frontmatter":{"title":"브랜치 관리 전략"}}},{"node":{"id":"8af31d09-cd75-584c-bb2e-bcb44fd0ab07","fields":{"slug":"/Unit-Test단위-테스트/"},"frontmatter":{"title":"Unit Test(단위 테스트)"}}},{"node":{"id":"6624b432-dede-5d27-893c-216435f81dfc","fields":{"slug":"/__post_init__/"},"frontmatter":{"title":"__post_init__"}}},{"node":{"id":"c9205ad4-3b94-5f9b-9873-ceed541116b9","fields":{"slug":"/dataclass/"},"frontmatter":{"title":"dataclass"}}},{"node":{"id":"8e311167-515e-5479-806d-576655d5aa6d","fields":{"slug":"/FastAPI와-DDD/"},"frontmatter":{"title":"FastAPI와 DDD"}}},{"node":{"id":"80faec5b-ac3c-55f4-8278-c5df45eeaeee","fields":{"slug":"/vercel-배포-자동화/"},"frontmatter":{"title":"vercel 배포 자동화"}}},{"node":{"id":"a596c40a-9b38-51b3-83ba-4822bd6ad215","fields":{"slug":"/AWS-ECSElastic-Container-Service/"},"frontmatter":{"title":"AWS ECS(Elastic Container Service)"}}},{"node":{"id":"af893e8d-1d43-5da0-b92e-fca9abfbdaea","fields":{"slug":"/Blue-Green-Deploy-전략/"},"frontmatter":{"title":"Blue Green Deploy 전략"}}},{"node":{"id":"0f61c80f-0860-5374-9507-690750d8738d","fields":{"slug":"/CloudFront/"},"frontmatter":{"title":"CloudFront"}}},{"node":{"id":"da0900a9-d1a3-5f11-b1a7-c2b1b79a025b","fields":{"slug":"/Poetry/"},"frontmatter":{"title":"Poetry"}}},{"node":{"id":"496bf14d-cf6f-551c-968d-c356aea3d9b1","fields":{"slug":"/DynamoDB의-동시성-제어Concurrency-Control/"},"frontmatter":{"title":"DynamoDB의 동시성 제어(Concurrency Control)"}}},{"node":{"id":"6fcbdee7-120b-57bd-b0c2-4c046589430b","fields":{"slug":"/FastAPI/"},"frontmatter":{"title":"FastAPI"}}},{"node":{"id":"2e1a8c7e-a8ad-58ac-9795-449d177048c6","fields":{"slug":"/Pydantic-모델/"},"frontmatter":{"title":"Pydantic 모델"}}},{"node":{"id":"e967fbe2-df8c-5d69-b5d6-13133817266e","fields":{"slug":"/FastAPI의-데코레이터/"},"frontmatter":{"title":"FastAPI의 데코레이터"}}},{"node":{"id":"4a995071-315b-57e1-8b9f-d6caa89ec351","fields":{"slug":"/생성기generate-패턴/"},"frontmatter":{"title":"생성기(generate) 패턴"}}},{"node":{"id":"4bd6f525-f59f-5917-9c63-bfee49948344","fields":{"slug":"/FastAPI에서-데코레이터와-Dependency/"},"frontmatter":{"title":"FastAPI에서 데코레이터와 Dependency"}}},{"node":{"id":"c1d8f764-63e6-5920-af1d-cc6ed82cab31","fields":{"slug":"/FastAPI와-asyncio/"},"frontmatter":{"title":"FastAPI와 asyncio"}}},{"node":{"id":"100f4f92-fdaa-53c8-93e5-96509170e2f3","fields":{"slug":"/aiohttp/"},"frontmatter":{"title":"aiohttp"}}},{"node":{"id":"eb8cca17-daa2-5b06-806b-3f96b650e68e","fields":{"slug":"/단축어로-SLACK-프로필-변경하기/"},"frontmatter":{"title":"단축어로 SLACK 프로필 변경하기"}}},{"node":{"id":"3aa5fd9e-e7a6-5d5d-b388-cced68004144","fields":{"slug":"/PynamoDB와-boto3-PynamoDB의-커넥션/"},"frontmatter":{"title":"PynamoDB와 boto3, PynamoDB의 커넥션"}}},{"node":{"id":"79b9b7d1-4816-53bd-a9be-1a42a3addf69","fields":{"slug":"/FastAPI에서-Postgresql의-커넥션-관리/"},"frontmatter":{"title":"FastAPI에서 Postgresql의 커넥션 관리"}}},{"node":{"id":"9d31ab39-c391-5100-8b1a-57e082219f0f","fields":{"slug":"/Sqlalchemy-비동기-엔진에서의-Postgresql-Pooler/"},"frontmatter":{"title":"Sqlalchemy 비동기 엔진에서의 Postgresql Pooler"}}},{"node":{"id":"3436aeb2-c9f0-56ff-b737-5adce4033c55","fields":{"slug":"/FastAPI의-Pagenation/"},"frontmatter":{"title":"FastAPI의 Pagenation"}}},{"node":{"id":"3c324741-c5af-5c92-a470-0093a3060c01","fields":{"slug":"/SqlAlchemy의-QueuePool/"},"frontmatter":{"title":"SqlAlchemy의 QueuePool"}}},{"node":{"id":"31479f72-375a-5d24-94d4-33e54c6d4b93","fields":{"slug":"/Pydantic-Model의-응용/"},"frontmatter":{"title":"Pydantic Model의 응용"}}},{"node":{"id":"280d0c1b-b14b-58e2-8adc-a140de967ea2","fields":{"slug":"/Union-Type/"},"frontmatter":{"title":"Union Type"}}},{"node":{"id":"e9509d5a-bdcd-5cf1-ac9f-75030f0bd9f7","fields":{"slug":"/우분투-용량-관리/"},"frontmatter":{"title":"우분투 용량 관리"}}},{"node":{"id":"b13d92a7-a846-5ceb-bf1c-8164da4ca0b9","fields":{"slug":"/Sqlalchemy에서의-트랜잭션-격리-수준-구현/"},"frontmatter":{"title":"Sqlalchemy에서의 트랜잭션 격리 수준 구현"}}},{"node":{"id":"770b4205-c82e-5645-b778-249d6eaa698e","fields":{"slug":"/트랜잭션-격리-수준Transaction-Isolation-Level/"},"frontmatter":{"title":"트랜잭션 격리 수준(Transaction Isolation Level)"}}},{"node":{"id":"b90cac43-c3fb-5909-a246-c732a3e8654e","fields":{"slug":"/PostgreSQL-Advisory-Locks-트랜잭션-레벨에서-구현/"},"frontmatter":{"title":"PostgreSQL Advisory Locks 트랜잭션 레벨에서 구현"}}},{"node":{"id":"c714646b-b50c-5276-ae7c-48259930dcf2","fields":{"slug":"/Sqlalchemy의-func/"},"frontmatter":{"title":"Sqlalchemy의 func"}}},{"node":{"id":"f5517be6-c8c2-576d-a17d-33f22f4c9bf7","fields":{"slug":"/동시성-제어문제-해결/"},"frontmatter":{"title":"동시성 제어문제 해결"}}},{"node":{"id":"6dd955b3-f181-577e-ac9a-ca78332aabd9","fields":{"slug":"/vscode-quick-Suggestions/"},"frontmatter":{"title":"vscode-quick Suggestions"}}},{"node":{"id":"2a57e1ce-076a-5342-b603-cd621e327fc3","fields":{"slug":"/Typescript의-열거형/"},"frontmatter":{"title":"Typescript의 열거형"}}},{"node":{"id":"21b7cba3-11a6-55c2-bfaa-5910041d8d05","fields":{"slug":"/Github-Action-Output/"},"frontmatter":{"title":"Github Action Output"}}},{"node":{"id":"da75b473-e208-5569-a01c-9a8c8dfcbf9d","fields":{"slug":"/Github-Actions/"},"frontmatter":{"title":"Github Actions"}}},{"node":{"id":"9bfd7c7d-1916-5513-bce7-d106583ae1fb","fields":{"slug":"/Github-Actions-Job---needs/"},"frontmatter":{"title":"Github Actions Job - needs"}}},{"node":{"id":"d4953c37-32d6-5c0f-b1ed-1ca71141c02d","fields":{"slug":"/Github-Actions-Workflow-수동으로-실행하기/"},"frontmatter":{"title":"Github Actions Workflow 수동으로 실행하기"}}},{"node":{"id":"db0bcfb1-23c4-5eca-b50b-8da83d567a83","fields":{"slug":"/Typescript의-Testcode-맛보기/"},"frontmatter":{"title":"Typescript의 Testcode 맛보기"}}}]},"previous":{"fields":{"slug":"/vercel-배포-자동화/"},"frontmatter":{"title":"vercel 배포 자동화"}},"next":{"fields":{"slug":"/Blue-Green-Deploy-전략/"},"frontmatter":{"title":"Blue Green Deploy 전략"}}},"pageContext":{"id":"a596c40a-9b38-51b3-83ba-4822bd6ad215","series":null,"previousPostId":"80faec5b-ac3c-55f4-8278-c5df45eeaeee","nextPostId":"af893e8d-1d43-5da0-b92e-fca9abfbdaea"}},"staticQueryHashes":[],"slicesMap":{}}