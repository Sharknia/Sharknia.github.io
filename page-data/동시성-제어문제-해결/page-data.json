{"componentChunkName":"component---src-templates-post-jsx","path":"/동시성-제어문제-해결/","result":{"data":{"site":{"siteMetadata":{"title":"SharkniA"}},"markdownRemark":{"id":"8221080c-9128-57cc-b79e-c8a9e7959a90","excerpt":"문제 가~끔 네트워크 문제 때문인지 클라이언트에서 같은 요청이 0.01초 미만의 간격으로 두 번씩 들어오는 경우가 있다. 사실상 요청이 동시에 들어오는 것과 같다. 대부분의 경우에는 문제가 되지 않지만, 쿠폰 구매 같은 민감한 요청에 대해서는 회사의 손해 또는 사용자의 불편과 예민하게 직결되므로 문제가 커질 수 있다.  따라서 해당 문제를 완벽히 해결하고…","html":"<h2>문제</h2>\n<p>가~끔 네트워크 문제 때문인지 클라이언트에서 같은 요청이 0.01초 미만의 간격으로 두 번씩 들어오는 경우가 있다. 사실상 요청이 동시에 들어오는 것과 같다. 대부분의 경우에는 문제가 되지 않지만, 쿠폰 구매 같은 민감한 요청에 대해서는 회사의 손해 또는 사용자의 불편과 예민하게 직결되므로 문제가 커질 수 있다. </p>\n<p>따라서 해당 문제를 완벽히 해결하고자 한다. </p>\n<p>현재 별다른 조치가 없는 상황에서 발생하는 문제 상황은 다음과 같다. </p>\n<div class=\"gatsby-highlight\" data-language=\"plaintext\"><pre class=\"language-plaintext\"><code class=\"language-plaintext\">1번 요청과 2번 요청이 0.005초 차이이고(사실상 동시),\n\n1번 요청 - 트랜잭션 시작\n2번 요청 - 트랜잭션 시작\n1번 요청 - 트랜잭션 완료, 커밋. 새로운 구매 내역이 테이블에 추가됨.\n2번 요청 - 트랜잭션 완료, 커밋. 새로운 구매 내역이 테이블에 추가됨. \n\n따라서 동일한 유저가 두 번 쿠폰을 구매한 것 처럼 처리되었다. </code></pre></div>\n<h3>제약조건 확인</h3>\n<p>현재 테이블의 키값이 user_id가 아니며, 난수 발생을 통해 생성된 값을 키 값으로 하고 있다. 또한 Redis와 같은 외부 라이브러리를 도입할 여유는 없다. 따라서 가능한 한 현재 시스템(Sqlalchemy, Postgresql)내에서 해결책을 찾고자 한다. </p>\n<h2>해결방안 고민</h2>\n<h3>최근 구매 내역 확인(기각)</h3>\n<p>가장 쉽게 생각할 수 있는 방법은 쿠폰 구매 로직에서 이 유저의 최근 구매 로직을 확인하는 것이다. 하지만 현재 이 상황에서는 사실상 요청이 동시에 들어오고 있으므로, 2번 요청이 시작됐을 때에는 해당 유저의 구매 내역이 아직 DB에 없을 것이므로, 이 방법은 사용할 수 없다. </p>\n<h3>Database-Level Optimistic Locking(기각)</h3>\n<p>각 트랜잭션에 버전 번호를 추가하고 트랜잭션이 커밋되기 전에 해당 버전 번호가 여전히 유효한지 확인한다. 하지만 이 방법도 여전히 2번 요청이 1번 요청의 결과를 감지하지 못할 수 있다. </p>\n<h3>Application-Level Locking(기각)</h3>\n<p>코드 내에서 직접 잠금 로직을 구현하는 방법이다. 데이터베이스가 아닌 애플리케이션의 메모리 내에서 잠금을 관리한다. 주로 멀티스레드 환경에서 특정 자원에 대한 동시 접근을 제어하는데 사용된다. 현재 FastAPI를 사용하고 있고, FastAPI는 기본적으로 비동기 방식으로 단일 스레드 환경에서 실행된다는 점을 고려하면 전통적인 스레드 기반의 잠금 매커니즘보다 async 라이브러리에 들어있는 비동기 프로그래밍에 적합한 잠금 메커니즘인 asyncio.Lock을 사용하는 것이 이상적이다.</p>\n<h4>FastAPI에서의 Application-Level Locking</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> asyncio\n\nlocks <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">purchase_coupon</span><span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    lock <span class=\"token operator\">=</span> locks<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">,</span> asyncio<span class=\"token punctuation\">.</span>Lock<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> lock<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 여기에 쿠폰 구매 로직을 구현합니다.</span>\n        <span class=\"token comment\"># 이 블록 내의 코드는 동시에 하나의 요청만 처리합니다.</span>\n        <span class=\"token keyword\">pass</span>\n\n<span class=\"token comment\"># FastAPI 엔드포인트에서 이 함수를 호출합니다.</span></code></pre></div>\n<p>이 코드는 user_id에 대해 별도의 asyncio.Lock을 생성하고 관리한다. 해당 user_id에 대한 작업이 진행중인 경우 다른 요청들은 해당 블록이 해제될 때까지 대기한다. </p>\n<p>예를 들어 다음 코드를 가정하자. 예를 들기 위해 아주 러프하게 작성했다. </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">test_function</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    lock <span class=\"token operator\">=</span> locks<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> asyncio<span class=\"token punctuation\">.</span>Lock<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> lock<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></code></pre></div>\n<p>이 코드는 다음과 같이 호출된다. </p>\n<div class=\"gatsby-highlight\" data-language=\"plaintext\"><pre class=\"language-plaintext\"><code class=\"language-plaintext\">test_function(1, 2) 호출 -> a 값이 1인 잠금 획득 -> 처리 시작\ntest_function(1, 2) 호출 -> a 값이 1인 동일한 잠금으로 인해 대기\ntest_function(2, 2) 호출 -> a 값이 2인 새로운 잠금 획득 -> 처리 시작\ntest_function(2, 2) 처리 완료 -> a 값이 2인 잠금 해제\ntest_function(1, 2)의 첫 번째 호출 처리 완료 -> a 값이 1인 잠금 해제\ntest_function(1, 2)의 두 번째 호출이 대기 상태에서 해제 -> 처리 시작\n\n따라서 print는 1, 2, 1의 순서가 된다. </code></pre></div>\n<p>다만, 비동기 프로그래밍, 특히 Python의 <a href=\"https://sharknia.github.io/FastAPI%EC%99%80-asyncio\">asyncio</a>를 사용할 때 코드의 실행순서는 이벤트 루프에 의해 관리된다. 작업의 일시 중단과 다른 작업의 실행이 이벤트 루프에 의해 어떻게 스케줄링 될지는 여러 요인에 따라 달라질 수 있다. </p>\n<h3>PostgreSQL Advisory Locks(당장 채용)</h3>\n<p>Advisory Locks는 애플리케이션에서 데이터베이스 레벨의 잠금을 관리할 수 있도록 해준다. 이를 통해 특정 user_id 에 대한 동시 요청을 제어할 수 있다. </p>\n<p>Advisory Locks는 테이블이나 행에 대한 접근을 잠그는 개념이 아니다. 특정 값 (정수)에 대한 잠금을 제공한다. 즉, 작업 자체에 1번이라는 이름을 붙이고 1번을 잠근다면, 다시 요청되는 1번 작업은 잠금이 된다. </p>\n<h4><strong>Advisory Locks의 작동 방식</strong></h4>\n<ul>\n<li>잠금 설정 : 애플리케이션이 pg_advisory_lock(key) 함수를 호출하여 특정 키에 대한 잠금을 요청한다.</li>\n<li>동일 키 사용 시 대기 : 같은 키를 사용하는 다른 데이터베이스 작업이 잠금을 보유하고 있다면, 새로운 잠금 요청은 해당 잠금이 해제될 때까지 대기한다. </li>\n<li>잠금 해제 : 원래의 작업이 완료되면 pg_advisory_unlock(key) 함수를 호출하여 잠금을 해제한다. 이후 대기 중이던 다른 작업이 잠금을 획득하고 진행될 수 있다. </li>\n</ul>\n<h4><strong>Advisory Locks의 잠금 레벨</strong></h4>\n<p>Advisory Locks는 두 가지 레벨에서 사용할 수 있다. </p>\n<ul>\n<li>\n<p>세션 레벨 : 이 잠금은 데이터베이스 세션과 연결되어있다. 세션이 종료되면 자동으로 해제된다. 세션 레벨 잠금은 장시간 유지되어야 하는 경우에 유용하다. </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">use_session_level_lock</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">:</span> AsyncSession<span class=\"token punctuation\">,</span> lock_key<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 세션 레벨 잠금 획득</span>\n    <span class=\"token keyword\">await</span> db<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"SELECT pg_advisory_lock(</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>lock_key<span class=\"token punctuation\">}</span></span><span class=\"token string\">)\"</span></span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 데이터베이스 작업 수행</span>\n    <span class=\"token comment\"># ...</span>\n\n    <span class=\"token comment\"># 필요한 경우, 명시적으로 잠금 해제</span>\n    <span class=\"token comment\"># await db.execute(f\"SELECT pg_advisory_unlock({lock_key})\")</span>\n\n    <span class=\"token comment\"># 세션 종료 시 잠금이 자동으로 해제됩니다.</span></code></pre></div>\n</li>\n<li>\n<p>트랜잭션 레벨 잠금 : 트랜잭션 레벨 잠금은 현재 트랜잭션과 연결되어 있으며 트랜잭션이 커밋되거나 롤백 될 때 자동으로 해제된다. </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> sqlalchemy<span class=\"token punctuation\">.</span>ext<span class=\"token punctuation\">.</span>asyncio <span class=\"token keyword\">import</span> AsyncSession\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">use_transaction_level_lock</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">:</span> AsyncSession<span class=\"token punctuation\">,</span> lock_key<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> db<span class=\"token punctuation\">.</span>begin<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 트랜잭션 레벨 잠금 획득</span>\n        <span class=\"token keyword\">await</span> db<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"SELECT pg_advisory_xact_lock(</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>lock_key<span class=\"token punctuation\">}</span></span><span class=\"token string\">)\"</span></span><span class=\"token punctuation\">)</span>\n        \n        <span class=\"token comment\"># 데이터베이스 작업 수행</span>\n        <span class=\"token comment\"># ...</span>\n\n    <span class=\"token comment\"># 트랜잭션이 종료되면 잠금이 자동으로 해제됩니다.</span></code></pre></div>\n</li>\n</ul>\n<p>쿠폰 구매 서비스 로직에서 트랜잭션 시작 전에  user_id를 기반으로 Advisory Lock을 요청하면 1번 요청이 처리되는 동안 동일한 user_id 에 대한 다른 요청은 대기하게 된다. 쿠폰 구매 처리가 완료되면, Advisory Lock을 해제하면 된다. </p>\n<h2>결론 - PostgreSQL Advisory Locks 채용</h2>\n<p>이 방법을 사용하면 매우 짧은 간격의 요청도 효과적으로 처리할 수 있다. 특히 트랜잭션 레벨의 잠금은 각 트랜잭션이 커밋되거나 롤백될 때까지만 유지되므로 0.005초와 같은 짧은 간격의 요청을 동기화하는데 매우 적합하다. </p>\n<p>백엔드 팀에서 협의를 거쳐 해당 방법을 사용해 구현하기로 최종 결정하였다. </p>","frontmatter":{"title":"동시성 제어문제 해결","date":"January 30, 2024","update":"February 09, 2024","tags":["DataBase","Postgresql","Work"],"series":null},"fields":{"slug":"/동시성-제어문제-해결/","readingTime":{"minutes":9.8}}},"seriesList":{"edges":[{"node":{"id":"b1fa34d8-79a6-5920-b77c-fbf3bc57100b","fields":{"slug":"/화상상담을-위한-Janus-구성/"},"frontmatter":{"title":"화상상담을 위한 Janus 구성"}}},{"node":{"id":"36ed6446-4d80-5d51-87fe-7cbb02582980","fields":{"slug":"/JavaScript의-특징-브라우저-동작-원리/"},"frontmatter":{"title":"JavaScript의 특징, 브라우저 동작 원리"}}},{"node":{"id":"1890a1d7-34c1-53bd-a8bd-9bdfd39e91c3","fields":{"slug":"/JavaScript-기본-문법/"},"frontmatter":{"title":"JavaScript 기본 문법"}}},{"node":{"id":"61ba989b-e166-5573-a895-1f71aa176358","fields":{"slug":"/JavaScript의-변수/"},"frontmatter":{"title":"JavaScript의 변수"}}},{"node":{"id":"09afa1c5-5d39-532c-8dbb-5ba9e4af5b42","fields":{"slug":"/JavaScript의-타입-변환과-단축-평가/"},"frontmatter":{"title":"JavaScript의 타입 변환과 단축 평가"}}},{"node":{"id":"a81f1c25-10c3-52c4-8594-54806409ea15","fields":{"slug":"/JavaScript-클로저/"},"frontmatter":{"title":"JavaScript 클로저"}}},{"node":{"id":"6f1a58a9-6d27-5238-a531-618fc2d38f6a","fields":{"slug":"/NestJS-소개/"},"frontmatter":{"title":"NestJS 소개"}}},{"node":{"id":"b1b9709f-6909-592c-b003-7ff67d3ca0fe","fields":{"slug":"/DB-튜닝-경험/"},"frontmatter":{"title":"DB 튜닝 경험"}}},{"node":{"id":"6a1bda4f-ebe2-5b4f-980e-0484f92834f9","fields":{"slug":"/MORETHAN-LOG-설치/"},"frontmatter":{"title":"MORETHAN-LOG 설치"}}},{"node":{"id":"192dff3e-aa73-5307-a245-65393ab4e1d9","fields":{"slug":"/RDB관계형-데이터베이스-RDBMS/"},"frontmatter":{"title":"RDB(관계형 데이터베이스) + RDBMS"}}},{"node":{"id":"7ac316a8-f6ea-52cc-a790-b5be80f2bec7","fields":{"slug":"/var와-letconst/"},"frontmatter":{"title":"var와 let,const"}}},{"node":{"id":"e86672d9-847c-55f9-a249-42b4d896508f","fields":{"slug":"/MORETHAN-LOG-수정/"},"frontmatter":{"title":"MORETHAN-LOG 수정"}}},{"node":{"id":"6a5ef575-d133-5b56-b0b6-4db4af7aa70d","fields":{"slug":"/NestJS-설치/"},"frontmatter":{"title":"NestJS 설치"}}},{"node":{"id":"c9c69060-c0a8-5657-b744-46feb11aa3bd","fields":{"slug":"/NestJS의-디렉토리-구조/"},"frontmatter":{"title":"NestJS의 디렉토리 구조"}}},{"node":{"id":"6c0e93ce-fab2-5cd8-b369-8c7e35114bd4","fields":{"slug":"/웹-사이트-프로젝트-vs-웹-응용-프로그램-프로젝트/"},"frontmatter":{"title":"웹 사이트 프로젝트 vs 웹 응용 프로그램 프로젝트"}}},{"node":{"id":"e6017a82-883c-5533-b084-e4d128fba3f5","fields":{"slug":"/Nuget-패키지-dll-추출/"},"frontmatter":{"title":"Nuget 패키지 dll 추출"}}},{"node":{"id":"0747e4e2-4d9c-5f2e-9ad4-db4690dc2756","fields":{"slug":"/무료-웹-호스팅-비교/"},"frontmatter":{"title":"무료 웹 호스팅 비교"}}},{"node":{"id":"dec52422-f02f-5520-bfe2-d277ddc7a455","fields":{"slug":"/PRG-패턴-PostRedirectGet/"},"frontmatter":{"title":"PRG 패턴 (Post/Redirect/Get)"}}},{"node":{"id":"ef3f3ed5-f90e-552f-8c1a-f24d1eeb0573","fields":{"slug":"/Python-venv-Windows/"},"frontmatter":{"title":"Python venv (Windows)"}}},{"node":{"id":"73f61a9c-4b13-5f3c-b288-9f971499e1c9","fields":{"slug":"/print와-pprint/"},"frontmatter":{"title":"print와 pprint"}}},{"node":{"id":"42d9a8c0-c330-548e-a36c-c8b97811df23","fields":{"slug":"/정규화와-역정규화/"},"frontmatter":{"title":"정규화와 역정규화"}}},{"node":{"id":"8bcc825c-89ec-552c-9144-ac6b2afced1e","fields":{"slug":"/트래픽-튜닝/"},"frontmatter":{"title":"트래픽 튜닝"}}},{"node":{"id":"1f906753-4b2c-58e9-8b1d-65dbacd5a5ed","fields":{"slug":"/npx/"},"frontmatter":{"title":"npx"}}},{"node":{"id":"90f8d06a-0a5c-5fa2-bcb7-7ac1b4fccbdc","fields":{"slug":"/Branch/"},"frontmatter":{"title":"Branch"}}},{"node":{"id":"3e072448-1152-518b-89a4-0154bf7ed441","fields":{"slug":"/DataTable-클래스/"},"frontmatter":{"title":"DataTable 클래스"}}},{"node":{"id":"4e96b425-fd44-57b0-a26c-205a2db9f3f9","fields":{"slug":"/Typescript-시작하기/"},"frontmatter":{"title":"Typescript 시작하기"}}},{"node":{"id":"825a1946-8a6a-559a-9e11-93447cdedcdf","fields":{"slug":"/gitignore/"},"frontmatter":{"title":"gitignore"}}},{"node":{"id":"c65d18a5-967b-591b-a184-2f380d3f7847","fields":{"slug":"/Factory-Pattern/"},"frontmatter":{"title":"Factory Pattern"}}},{"node":{"id":"ee0abcf0-eb6f-569e-a2df-26ef807ffd53","fields":{"slug":"/네이밍-규칙naming-conventions/"},"frontmatter":{"title":"네이밍 규칙(naming conventions)"}}},{"node":{"id":"b3e00fd2-84a2-5bbc-8976-a76d7948ba15","fields":{"slug":"/AWS-API-Gateway/"},"frontmatter":{"title":"AWS API Gateway"}}},{"node":{"id":"c1d28daf-f0b4-521c-926c-88c14a61a609","fields":{"slug":"/ColdStart/"},"frontmatter":{"title":"ColdStart"}}},{"node":{"id":"45a48b17-f235-5fcf-90c4-f186e96b788e","fields":{"slug":"/Serverless/"},"frontmatter":{"title":"Serverless"}}},{"node":{"id":"59b56ebf-8c53-5362-82a7-3deb113c9308","fields":{"slug":"/Dynamo-DB/"},"frontmatter":{"title":"Dynamo DB"}}},{"node":{"id":"b1e5d38b-5dfb-5406-a693-d18281ac16f8","fields":{"slug":"/NoSQL/"},"frontmatter":{"title":"NoSQL"}}},{"node":{"id":"97236b20-03d7-59be-b021-0cf4f12ba08f","fields":{"slug":"/REST/"},"frontmatter":{"title":"REST"}}},{"node":{"id":"67555ff4-c43d-50d6-91fc-7db62ae5324a","fields":{"slug":"/TypeError-non-default-argument-content-follows-default-argument/"},"frontmatter":{"title":"TypeError: non-default argument 'content' follows default argument"}}},{"node":{"id":"247e0d6c-cb1f-523b-a365-12fbdf26de54","fields":{"slug":"/브랜치-관리-전략/"},"frontmatter":{"title":"브랜치 관리 전략"}}},{"node":{"id":"fd68eada-5e64-5d6e-ad3e-e7cccc28c242","fields":{"slug":"/Unit-Test단위-테스트/"},"frontmatter":{"title":"Unit Test(단위 테스트)"}}},{"node":{"id":"8fc059ee-a057-5299-9416-e5fe9a21f3b5","fields":{"slug":"/__post_init__/"},"frontmatter":{"title":"__post_init__"}}},{"node":{"id":"facbb85b-b3b0-54f1-b2ac-5593cedf9d02","fields":{"slug":"/dataclass/"},"frontmatter":{"title":"dataclass"}}},{"node":{"id":"f517cf21-d25d-5ad1-90b2-7cd04bdc1de5","fields":{"slug":"/FastAPI와-DDD/"},"frontmatter":{"title":"FastAPI와 DDD"}}},{"node":{"id":"c76d3263-2674-5711-9753-c7b1884886a2","fields":{"slug":"/vercel-배포-자동화/"},"frontmatter":{"title":"vercel 배포 자동화"}}},{"node":{"id":"643a5e74-e453-5eaf-be99-4fe90007fc0d","fields":{"slug":"/AWS-ECSElastic-Container-Service/"},"frontmatter":{"title":"AWS ECS(Elastic Container Service)"}}},{"node":{"id":"295a3a5e-5f68-53dd-a096-99c650a09f85","fields":{"slug":"/Blue-Green-Deploy-전략/"},"frontmatter":{"title":"Blue Green Deploy 전략"}}},{"node":{"id":"ef099c50-5b09-5374-b773-1646367f1a07","fields":{"slug":"/CloudFront/"},"frontmatter":{"title":"CloudFront"}}},{"node":{"id":"f2c13448-7669-5227-8e74-c0db79f8efa6","fields":{"slug":"/Poetry/"},"frontmatter":{"title":"Poetry"}}},{"node":{"id":"327528cd-aa5a-5ecb-9d02-1747c311b92a","fields":{"slug":"/DynamoDB의-동시성-제어Concurrency-Control/"},"frontmatter":{"title":"DynamoDB의 동시성 제어(Concurrency Control)"}}},{"node":{"id":"c61f89ee-7345-5822-a5bb-1ee417382592","fields":{"slug":"/FastAPI/"},"frontmatter":{"title":"FastAPI"}}},{"node":{"id":"6fde18dc-7c77-5d99-8142-13ade8537ae3","fields":{"slug":"/Pydantic-모델/"},"frontmatter":{"title":"Pydantic 모델"}}},{"node":{"id":"f97d2d57-9678-56e0-a700-2bd7ef00aca3","fields":{"slug":"/FastAPI의-데코레이터/"},"frontmatter":{"title":"FastAPI의 데코레이터"}}},{"node":{"id":"9b37002b-b912-5345-b81b-46951cc4a970","fields":{"slug":"/생성기generate-패턴/"},"frontmatter":{"title":"생성기(generate) 패턴"}}},{"node":{"id":"483a498b-b542-5587-989a-52dab4c1214c","fields":{"slug":"/FastAPI에서-데코레이터와-Dependency/"},"frontmatter":{"title":"FastAPI에서 데코레이터와 Dependency"}}},{"node":{"id":"80de20ad-d374-517c-ac92-d2877e4c06a8","fields":{"slug":"/FastAPI와-asyncio/"},"frontmatter":{"title":"FastAPI와 asyncio"}}},{"node":{"id":"87a218c9-82b0-5f05-90fa-a0d9da888853","fields":{"slug":"/aiohttp/"},"frontmatter":{"title":"aiohttp"}}},{"node":{"id":"222a8a91-8da9-500a-9074-4dd115cbe21f","fields":{"slug":"/단축어로-SLACK-프로필-변경하기/"},"frontmatter":{"title":"단축어로 SLACK 프로필 변경하기"}}},{"node":{"id":"75fcb75f-0a52-533f-a038-0a8460398f25","fields":{"slug":"/PynamoDB와-boto3-PynamoDB의-커넥션/"},"frontmatter":{"title":"PynamoDB와 boto3, PynamoDB의 커넥션"}}},{"node":{"id":"f15732ca-1b29-5230-aa8f-d32fd8ce5769","fields":{"slug":"/FastAPI에서-Postgresql의-커넥션-관리/"},"frontmatter":{"title":"FastAPI에서 Postgresql의 커넥션 관리"}}},{"node":{"id":"e0b43964-5998-5379-becc-614d8c62f076","fields":{"slug":"/Sqlalchemy-비동기-엔진에서의-Postgresql-Pooler/"},"frontmatter":{"title":"Sqlalchemy 비동기 엔진에서의 Postgresql Pooler"}}},{"node":{"id":"ef31575e-f174-58f7-84b7-832d38e952f9","fields":{"slug":"/FastAPI의-Pagenation/"},"frontmatter":{"title":"FastAPI의 Pagenation"}}},{"node":{"id":"c661de9c-fcb1-5bc6-b987-28d7cd303acb","fields":{"slug":"/SqlAlchemy의-QueuePool/"},"frontmatter":{"title":"SqlAlchemy의 QueuePool"}}},{"node":{"id":"7591133a-cdeb-5c9a-ab49-4ca7c8f3dea7","fields":{"slug":"/Pydantic-Model의-응용/"},"frontmatter":{"title":"Pydantic Model의 응용"}}},{"node":{"id":"cf792859-1afc-5118-bf50-0752527a6569","fields":{"slug":"/Union-Type/"},"frontmatter":{"title":"Union Type"}}},{"node":{"id":"c2c531ea-1018-5ad8-87b3-c1c027e8f2ee","fields":{"slug":"/우분투-용량-관리/"},"frontmatter":{"title":"우분투 용량 관리"}}},{"node":{"id":"ccff0278-8778-54c6-a28a-ffad6d97612d","fields":{"slug":"/Sqlalchemy에서의-트랜잭션-격리-수준-구현/"},"frontmatter":{"title":"Sqlalchemy에서의 트랜잭션 격리 수준 구현"}}},{"node":{"id":"ee1bfa9e-9eeb-52a2-a33a-88916dcc9119","fields":{"slug":"/트랜잭션-격리-수준Transaction-Isolation-Level/"},"frontmatter":{"title":"트랜잭션 격리 수준(Transaction Isolation Level)"}}},{"node":{"id":"a7292f80-7079-5082-9645-3def2d6750b8","fields":{"slug":"/PostgreSQL-Advisory-Locks-트랜잭션-레벨에서-구현/"},"frontmatter":{"title":"PostgreSQL Advisory Locks 트랜잭션 레벨에서 구현"}}},{"node":{"id":"acd438b5-e05c-5772-9da1-3ea3a67cefe0","fields":{"slug":"/Sqlalchemy의-func/"},"frontmatter":{"title":"Sqlalchemy의 func"}}},{"node":{"id":"8221080c-9128-57cc-b79e-c8a9e7959a90","fields":{"slug":"/동시성-제어문제-해결/"},"frontmatter":{"title":"동시성 제어문제 해결"}}},{"node":{"id":"4e23a734-8707-55b2-824e-d120641e8f1a","fields":{"slug":"/vscode-quick-Suggestions/"},"frontmatter":{"title":"vscode-quick Suggestions"}}},{"node":{"id":"1f589451-3bb6-501a-a892-6492654e760c","fields":{"slug":"/Typescript의-열거형/"},"frontmatter":{"title":"Typescript의 열거형"}}},{"node":{"id":"a5babc02-b843-5c39-85e7-1b34cce43cdd","fields":{"slug":"/Github-Action-Output/"},"frontmatter":{"title":"Github Action Output"}}},{"node":{"id":"8b1f5d89-c5ae-52b6-b3c7-19a8d6afda7a","fields":{"slug":"/Github-Actions/"},"frontmatter":{"title":"Github Actions"}}},{"node":{"id":"b81485d3-7cab-52c0-adf9-f489724dc88f","fields":{"slug":"/Github-Actions-Job---needs/"},"frontmatter":{"title":"Github Actions Job - needs"}}},{"node":{"id":"72e50b04-cb8a-55a6-b4ac-636d3dce4b78","fields":{"slug":"/Github-Actions-Workflow-수동으로-실행하기/"},"frontmatter":{"title":"Github Actions Workflow 수동으로 실행하기"}}},{"node":{"id":"2b53a4ed-50b1-5166-bde5-00f56edc9436","fields":{"slug":"/Typescript의-Testcode-맛보기/"},"frontmatter":{"title":"Typescript의 Testcode 맛보기"}}},{"node":{"id":"dbdceb4a-2ed6-5dbc-aa20-7dc961d63f54","fields":{"slug":"/시맨틱-버전-관리/"},"frontmatter":{"title":"시맨틱 버전 관리"}}},{"node":{"id":"6e6deb6d-e36d-5d2f-b11a-55fbc674c2ea","fields":{"slug":"/SQLAlchemy-create_all-메소드로-데이터베이스-테이블-자동-생성하기/"},"frontmatter":{"title":"SQLAlchemy create_all() 메소드로 데이터베이스 테이블 자동 생성하기"}}},{"node":{"id":"dd65c1da-59ff-5d58-a092-3ecc81bdb4fd","fields":{"slug":"/Sqlalchemy의-index/"},"frontmatter":{"title":"Sqlalchemy의 index"}}},{"node":{"id":"2de5adbd-b426-5f30-8811-ebd7fc04ff66","fields":{"slug":"/위치-기반-검색-기능의-구현/"},"frontmatter":{"title":"위치 기반 검색 기능의 구현"}}},{"node":{"id":"50b9db01-3888-5f30-80bc-b2d8ffd25486","fields":{"slug":"/인앱결제에서-백엔드는-무엇을-준비해야-할까/"},"frontmatter":{"title":"인앱결제에서 백엔드는 무엇을 준비해야 할까?"}}},{"node":{"id":"bb95007b-56db-5930-a9b8-4c09e2e118c4","fields":{"slug":"/식별-관계와-비식별-관계-그리고-CASCADE-옵션의-이해/"},"frontmatter":{"title":"식별 관계와 비식별 관계, 그리고 CASCADE 옵션의 이해"}}},{"node":{"id":"f76f95c7-1554-5431-a30b-7d03c93ac41c","fields":{"slug":"/arc-browser/"},"frontmatter":{"title":"arc browser"}}},{"node":{"id":"ae4611cf-ac19-58f9-be47-e8452f25a2df","fields":{"slug":"/Apple-Silicon과-pyenv/"},"frontmatter":{"title":"Apple Silicon과 pyenv"}}},{"node":{"id":"fe32f546-1476-5dc1-99f4-355cd81fba19","fields":{"slug":"/FastAPI-프로젝트의-시작/"},"frontmatter":{"title":"FastAPI 프로젝트의 시작"}}},{"node":{"id":"7edd7ada-7dda-553b-b007-2e7eacdc0c25","fields":{"slug":"/Geocoder와-Reverse-Geocoder/"},"frontmatter":{"title":"Geocoder와 Reverse Geocoder"}}},{"node":{"id":"ef7e194d-396d-5189-87b2-9905aa8edea4","fields":{"slug":"/Postgresql의-JSON과-JSONB/"},"frontmatter":{"title":"Postgresql의 JSON과 JSONB"}}},{"node":{"id":"ad9ce5f7-33b5-5f19-9087-52c928903f92","fields":{"slug":"/SQLModel에서-unique_constraints-설정하기/"},"frontmatter":{"title":"SQLModel에서 unique_constraints 설정하기"}}},{"node":{"id":"fbd5faae-ec78-5d51-ac80-d809dc5137d2","fields":{"slug":"/Supabase-Local-Dev-환경-꾸미기/"},"frontmatter":{"title":"Supabase Local Dev 환경 꾸미기"}}},{"node":{"id":"939d0130-e4ea-5ae4-a169-be69c0f404f9","fields":{"slug":"/Supabase와-Row-Level-Security-RLS/"},"frontmatter":{"title":"Supabase와 Row-Level Security (RLS) "}}},{"node":{"id":"6c085c2e-fa7b-5dcc-a26f-df91cf9354ea","fields":{"slug":"/Supabase-Local-개발-환경-꾸미기---DB-세팅/"},"frontmatter":{"title":"Supabase Local 개발 환경 꾸미기 - DB 세팅"}}},{"node":{"id":"f1f51fb0-adac-5433-9a00-912141ff3182","fields":{"slug":"/Supabase-CLI-db-migration-이력-초기화하기/"},"frontmatter":{"title":"Supabase CLI db migration 이력 초기화하기"}}},{"node":{"id":"2a0b1ae0-7af6-5ce1-90ad-57af39dc2085","fields":{"slug":"/Supabase-EdgeFunction---Deno-개발환경-꾸미기/"},"frontmatter":{"title":"Supabase EdgeFunction  - Deno 개발환경 꾸미기"}}},{"node":{"id":"bbfd7494-2deb-5de4-88dd-5ffbdd240cf6","fields":{"slug":"/Postgresql-Function-Trigger-생성-쿼리문-확인하기/"},"frontmatter":{"title":"Postgresql Function, Trigger 생성 쿼리문 확인하기"}}},{"node":{"id":"e2d90afb-f1f2-5e1f-aab6-820a0d5cf41c","fields":{"slug":"/postgresql의-pg_jsonschema/"},"frontmatter":{"title":"postgresql의 pg_jsonschema"}}},{"node":{"id":"a692b906-efe4-5b06-a108-de1a09926ea9","fields":{"slug":"/Postgresql에서-ENUM-타입에서-값-삭제하기/"},"frontmatter":{"title":"Postgresql에서 ENUM 타입에서 값 삭제하기"}}},{"node":{"id":"d48736cc-957e-53f5-9f48-aac53d5598e4","fields":{"slug":"/PostgreSQL에서-테이블-로우를-JSON으로-변환하기/"},"frontmatter":{"title":"PostgreSQL에서 테이블 로우를 JSON으로 변환하기"}}},{"node":{"id":"02ae12df-41b7-5333-a060-ecc60974fbab","fields":{"slug":"/RLS에-대한-궁금증-모음/"},"frontmatter":{"title":"RLS에 대한 궁금증 모음"}}},{"node":{"id":"78c2562a-631b-572d-8dee-132c9ff9b074","fields":{"slug":"/Deno에서-URL의-쿼리-스트링Query-String-다루기/"},"frontmatter":{"title":" Deno에서 URL의 쿼리 스트링(Query String) 다루기"}}},{"node":{"id":"bab930ba-913e-596b-a917-bdd124dd36db","fields":{"slug":"/Supabase에서-뷰에도-RLS-적용하기/"},"frontmatter":{"title":"Supabase에서 뷰에도 RLS 적용하기"}}},{"node":{"id":"8c276d68-536a-5e9d-a09f-c0055c239046","fields":{"slug":"/supabase-custom-claims를-활용한-관리자-권한-관리/"},"frontmatter":{"title":"supabase-custom-claims를 활용한 관리자 권한 관리"}}},{"node":{"id":"d6698c34-32be-55f0-94d2-50b66aef1073","fields":{"slug":"/Supabase를-위한-Bitbucket-Pipelines-CICD-워크플로우-구축하기/"},"frontmatter":{"title":"Supabase를 위한 Bitbucket Pipelines CI/CD 워크플로우 구축하기"}}},{"node":{"id":"bc763a45-0f35-5420-9eed-9e6387ff48ee","fields":{"slug":"/Pyenv-local-실행을-했는데-파이썬-버전이-바뀌지-않는다/"},"frontmatter":{"title":"Pyenv local 실행을 했는데 파이썬 버전이 바뀌지 않는다"}}},{"node":{"id":"60b158b5-de2c-56a7-a158-53f3648b2889","fields":{"slug":"/Django-설치/"},"frontmatter":{"title":"Django 설치"}}},{"node":{"id":"711d4b8d-3afb-59f8-a47e-efe8b52f1665","fields":{"slug":"/docker-compose를-활용한-postgresql과-django-커넥션-만들기/"},"frontmatter":{"title":"docker-compose를 활용한 postgresql과 django 커넥션 만들기"}}},{"node":{"id":"3c997249-c541-501d-9479-558a653fc409","fields":{"slug":"/Nextjs-소개와-설치-간단-예제/"},"frontmatter":{"title":"Next.js 소개와 설치, 간단 예제"}}},{"node":{"id":"e04ee4b2-2742-5601-a3f7-147ad7074bc1","fields":{"slug":"/ngrok-로컬-서버를-쉽게-공개하는-도구/"},"frontmatter":{"title":"ngrok: 로컬 서버를 쉽게 공개하는 도구"}}},{"node":{"id":"286a5830-d62e-5ddd-99e9-d237161a5838","fields":{"slug":"/Django-Discord-소셜-회원가입-및-로그인-구현/"},"frontmatter":{"title":"Django Discord 소셜 회원가입 및 로그인 구현"}}},{"node":{"id":"e2facd8b-fe1b-5d7e-8134-327a36c58230","fields":{"slug":"/Nextjs-Supabase-회원가입-구현/"},"frontmatter":{"title":"Next.js + Supabase 회원가입 구현"}}},{"node":{"id":"987a5340-8662-50df-85c0-6b7c3732d791","fields":{"slug":"/Django-프로젝트에-Swagger-설정하기/"},"frontmatter":{"title":"Django 프로젝트에 Swagger 설정하기"}}},{"node":{"id":"989746e1-cdef-5498-8c00-2087bbb27bd7","fields":{"slug":"/Django-Rest-Framework에서-JWT를-이용한-사용자-인증-구현/"},"frontmatter":{"title":"Django Rest Framework에서 JWT를 이용한 사용자 인증 구현"}}},{"node":{"id":"11691347-100c-5676-9729-f22ce8a43272","fields":{"slug":"/Django의-Serializers/"},"frontmatter":{"title":"Django의 Serializers"}}},{"node":{"id":"910235bb-5188-5a17-a705-a552a6684e7d","fields":{"slug":"/Go-입문/"},"frontmatter":{"title":"Go 입문"}}},{"node":{"id":"a1ef6dd3-d896-5758-8f72-9e378dcab0f3","fields":{"slug":"/Go를-활용한-OAuth-20-구현/"},"frontmatter":{"title":"Go를 활용한 OAuth 2.0 구현"}}},{"node":{"id":"55e2a5f0-e2c2-5f20-9bc1-e6f52142b1ab","fields":{"slug":"/Django의-사용자-인증-시스템-커스터마이징/"},"frontmatter":{"title":"Django의 사용자 인증 시스템 커스터마이징"}}},{"node":{"id":"27fc9be6-e48b-52a8-bf6d-c0c664700209","fields":{"slug":"/DRF의-API-View/"},"frontmatter":{"title":"DRF의 API View"}}},{"node":{"id":"19273a3e-a109-5cb0-a53a-102a2c1f1f74","fields":{"slug":"/AWS-활용-테스트-서버-구현-1/"},"frontmatter":{"title":"AWS 활용 테스트 서버 구현 (1)"}}},{"node":{"id":"b443bdc5-d571-57ac-a75f-e433dc12f651","fields":{"slug":"/AWS에서-EC2-인스턴스-생성-및-Visual-Studio-Code로-원격-연결하기/"},"frontmatter":{"title":"AWS에서 EC2 인스턴스 생성 및 Visual Studio Code로 원격 연결하기"}}},{"node":{"id":"88f3a1cc-7ec0-50be-a43d-d969e27c4529","fields":{"slug":"/Django-REST-Framework에서-가상-필드-추가하기/"},"frontmatter":{"title":"Django REST Framework에서 가상 필드 추가하기"}}},{"node":{"id":"ae529d5f-12b2-59f1-89bc-e832cde40652","fields":{"slug":"/Mock과-Stub-Fixture/"},"frontmatter":{"title":"Mock과 Stub, Fixture"}}},{"node":{"id":"388f1fc6-4ef9-5391-ad7c-03a8e88d99e3","fields":{"slug":"/Install-Tailwind-CSS-with-Nextjs/"},"frontmatter":{"title":"Install Tailwind CSS with Next.js"}}},{"node":{"id":"dbba3bc0-4c3c-5d9d-87fa-c9c9650907df","fields":{"slug":"/Ubuntu-DLNA-서버-설정/"},"frontmatter":{"title":"Ubuntu DLNA 서버 설정"}}},{"node":{"id":"626fd5b3-36c4-5633-8916-46f9aeba4756","fields":{"slug":"/GitHub-Container-Registry-vs-Docker-Hub/"},"frontmatter":{"title":"GitHub Container Registry vs Docker Hub"}}},{"node":{"id":"a0117df3-8740-55e0-b9e9-d14f35c4e2a9","fields":{"slug":"/N1-문제/"},"frontmatter":{"title":"N+1 문제"}}},{"node":{"id":"e925ca86-1d32-5737-b469-6b04e049b5be","fields":{"slug":"/N1-문제의-해결방법/"},"frontmatter":{"title":"N+1 문제의 해결방법"}}},{"node":{"id":"7caa9886-de89-5549-a331-43a790e9be9d","fields":{"slug":"/Django의-관리자-페이지-만들기/"},"frontmatter":{"title":"Django의 관리자 페이지 만들기"}}},{"node":{"id":"4a03fdbb-525f-5955-a2f4-d2e3f37dab34","fields":{"slug":"/Django의-startapp/"},"frontmatter":{"title":"Django의 startapp"}}},{"node":{"id":"d02a3ccb-149b-5f4e-b724-2a5c694d9dd6","fields":{"slug":"/SD-카드-기반-디스크-오류-및-해결-과정/"},"frontmatter":{"title":"SD 카드 기반 디스크 오류 및 해결 과정"}}},{"node":{"id":"bd6bfd1a-0643-5893-b4fe-19074e66dee3","fields":{"slug":"/Docker에서-Python-환경-변수-관리/"},"frontmatter":{"title":"Docker에서 Python 환경 변수 관리"}}},{"node":{"id":"0baf5600-7bc6-5104-b434-352d0e8cf8fb","fields":{"slug":"/Python-Mocking시-patch-경로-문제-해결하기/"},"frontmatter":{"title":"Python Mocking시 patch 경로 문제 해결하기"}}},{"node":{"id":"ac8d2058-f151-5c32-bb36-494173ac916f","fields":{"slug":"/FastAPI의-의존성-주입Dependency-Injection/"},"frontmatter":{"title":"FastAPI의 의존성 주입(Dependency Injection)"}}},{"node":{"id":"7e134f83-d0a3-5e87-82cd-6877e6ba4567","fields":{"slug":"/FastAPI-의존성-주입의-심화-활용법과-주의점/"},"frontmatter":{"title":"FastAPI 의존성 주입의 심화 활용법과 주의점"}}},{"node":{"id":"06b9e98d-7766-587f-b48e-423e69c5a214","fields":{"slug":"/Typescript의-얇은-복사-vs-깊은-복사/"},"frontmatter":{"title":"Typescript의 얇은 복사 vs 깊은 복사"}}},{"node":{"id":"2dfdf2e4-9e64-596a-a6d6-cb81c682ef09","fields":{"slug":"/React-Native-설치/"},"frontmatter":{"title":"React Native 설치"}}}]},"previous":{"fields":{"slug":"/Sqlalchemy의-func/"},"frontmatter":{"title":"Sqlalchemy의 func"}},"next":{"fields":{"slug":"/vscode-quick-Suggestions/"},"frontmatter":{"title":"vscode-quick Suggestions"}}},"pageContext":{"id":"8221080c-9128-57cc-b79e-c8a9e7959a90","series":null,"previousPostId":"acd438b5-e05c-5772-9da1-3ea3a67cefe0","nextPostId":"4e23a734-8707-55b2-824e-d120641e8f1a"}},"staticQueryHashes":[],"slicesMap":{}}