{"componentChunkName":"component---src-templates-post-jsx","path":"/JavaScript-기본-문법/","result":{"data":{"site":{"siteMetadata":{"title":"SharkniA"}},"markdownRemark":{"id":"865e05e1-e5c6-526f-92e6-4f2d31e585c0","excerpt":"JavaScript 기본 문법 변수(Variable) 메모리상의 주소(위치)를 기억하는 저장소. 즉 메모리 주소에 접근하기 위해 사람이 이해할 수 있는 언어로 지정한 식별자 값 데이터 타입(Data Type) 프로그래밍 언어에서 사용할 수 있는 값의 종료 변수(Variable) 값이 저장된 메모리를 가리키는 식별자 리터럴(literal) 소스코드 안에 직…","html":"<h1>JavaScript 기본 문법</h1>\n<ol>\n<li>\n<p>변수(Variable)</p>\n<p>메모리상의 주소(위치)를 기억하는 저장소. 즉 메모리 주소에 접근하기 위해 사람이 이해할 수 있는 언어로 지정한 식별자</p>\n</li>\n<li>\n<p>값</p>\n<table>\n<thead>\n<tr>\n<th>데이터 타입(Data Type)</th>\n<th>프로그래밍 언어에서 사용할 수 있는 값의 종료</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>변수(Variable)</td>\n<td>값이 저장된 메모리를 가리키는 식별자</td>\n</tr>\n<tr>\n<td>리터럴(literal)</td>\n<td>소스코드 안에 직접 만들어낸 상수 값 자체. 값의 최소 단위</td>\n</tr>\n</tbody>\n</table>\n<p>값은 프로그램에 의해 조작될 수 있는 대상을 말한다. </p>\n<p>자바스크립트의 모든 값은 자바스크립트가 제공하는 7가지 데이터 타입 중 하나를 갖는다. </p>\n<ul>\n<li>\n<p>데이터타입</p>\n<ul>\n<li>\n<p>원시타입(Privitive data type)</p>\n<ul>\n<li>number</li>\n<li>string</li>\n<li>boolean</li>\n<li>null</li>\n<li>undefined</li>\n<li>symbol(ES6)</li>\n</ul>\n</li>\n<li>\n<p>객체 타입(Object data type)</p>\n<ul>\n<li>object</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>자바스크립트는 데이터 타입을 미리 지정하지 않는다. 값의 타입에 의해 동적으로 변수의 타입이 결정되며, 이를 동적 타이핑이라고 한다. </p>\n</li>\n<li>\n<p>연산자</p>\n<p>피연산자의 타입이 반드시 일치할 필요가 없다. 암묵적 타입 강제 변환을 통해 연산을 수행한다. </p>\n</li>\n<li>\n<p>키워드</p>\n<p>키워드는 수행할 동작을 규정한다. 예를 들어 var 는 변수를 생성할 것을 지시한다. </p>\n</li>\n<li>\n<p>주석</p>\n<p>// 로 쓴다. 또는 /* */ 사이에 쓴다. </p>\n<p>주석은 해석기가 무시하며 실행되지 않는다. </p>\n</li>\n<li>\n<p>문</p>\n<p>브라우저에 의해 단계별로 수행될 명령들의 집합. 문은 리터럴, 연산자, 표현식, 키워드 등으로 구성되며 세미콜론으로 끝나야 한다. </p>\n<p>문은 코드 블록으로 그룹화 할 수 있다. </p>\n<p>자바스크립트는 블록 유효범위 (Block-Level Scope)를 생성하지 않는다. 함수 단위의 유효범위 (Function-Level Scope)만 생성된다.</p>\n</li>\n<li>\n<p>표현식</p>\n<p>표현식은 하나의 값으로 평가된다.</p>\n</li>\n<li>\n<p>문과 표현식의 비교</p>\n<p>문은 표현식을 포함한다. 표현식은 그 자체로 하나의 문이 될 수도 있다. </p>\n<p>표현식은 평가되어 값을 만들지만 그 이상의 행위는 할 수 없다. </p>\n<p>표현식을 통해 평가한 값을 통해 실제로 컴퓨터에게 명령을 하여 무언가를 하는 것은 문이다.</p>\n</li>\n<li>\n<p>함수</p>\n<p>어떤 작업을 수행하기 위해 필요한 문들의 집함. 이름과 매개변수를 가진다. </p>\n</li>\n<li>\n<p>객체</p>\n<p>자바스크립트는 객체(object) 기반의 스크립트 언어로 자바스크립트를 이루는 거의 모든 것이 객체이다. </p>\n<p>원시 타입을 제외한 나머지 값들은 모두 객체이다. (함수, 배열, 정규표현식 등)</p>\n<p>자바스크립트 객체는 키(이름)와 값으로 구성된 프로퍼티(property)의 집합이다. 프로퍼티의 값으로 자바스크립트에서 사용할 수 있는 모든 값을 사용할 수 있다. 자바스크립트의 함수는 일급 객체이므로 값으로 취급할 수 있다. </p>\n<p>따라서 프로퍼티 값으로 함수를 사용할수도 있으며, 프로퍼티 값이 함수일 경우 일반 함수와 구분하기 위헤 메소드라 부른다. </p>\n<p>객체는 데이터를 의미하는 프로퍼티와 데이터를 참조하고 조작할 수 있는 동작을 의미하는 메소드로 구성된 집합이다. 객체는 데이터(프로퍼티)와 그 데이터에 관련되는 동작(메소드)을 모두 포함할 수 있기 때문에 데이터와 동작을 하나의 단위로 구조화할 수 있어 유용하다. </p>\n<p>자바스크립트의 객체는 객체지향의 상속을 구현하기 위해 “프로토타입”이라고 불리는 객체의 프로퍼티와 메소드를 상속받을 수 있다. </p>\n</li>\n<li>\n<p>배열</p>\n<p>자바스크립트의 배열은 객체이다. 유용한 내장 메소드를 포함하고 있다.</p>\n</li>\n</ol>","frontmatter":{"title":"JavaScript 기본 문법","date":"January 06, 2023","update":"August 20, 2023","tags":["JavaScript"],"series":null},"fields":{"slug":"/JavaScript-기본-문법/","readingTime":{"minutes":5.28}}},"seriesList":{"edges":[{"node":{"id":"0b1c2d5a-2b50-5b66-afbf-b01926c0dd54","fields":{"slug":"/화상상담을-위한-Janus-구성/"},"frontmatter":{"title":"화상상담을 위한 Janus 구성"}}},{"node":{"id":"865e05e1-e5c6-526f-92e6-4f2d31e585c0","fields":{"slug":"/JavaScript-기본-문법/"},"frontmatter":{"title":"JavaScript 기본 문법"}}}]},"previous":{"fields":{"slug":"/화상상담을-위한-Janus-구성/"},"frontmatter":{"title":"화상상담을 위한 Janus 구성"}},"next":null},"pageContext":{"id":"865e05e1-e5c6-526f-92e6-4f2d31e585c0","series":null,"previousPostId":"0b1c2d5a-2b50-5b66-afbf-b01926c0dd54","nextPostId":null}},"staticQueryHashes":[],"slicesMap":{}}