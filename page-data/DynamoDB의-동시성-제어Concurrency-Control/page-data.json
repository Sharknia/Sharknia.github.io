{"componentChunkName":"component---src-templates-post-jsx","path":"/DynamoDB의-동시성-제어Concurrency-Control/","result":{"data":{"site":{"siteMetadata":{"title":"SharkniA"}},"markdownRemark":{"id":"9ac81ae8-f2d6-5d58-b563-c3c4f2654a87","excerpt":"데이터베이스의 동시성 제어란? 여러 트랜잭션 또는 연산이 동시에 수행될 때 데이터의 일관성을 유지하고 충돌을 방지하기 위한 매커니즘을 말한다. 잘못된 동시성 제어는 데이터의 무결성을 해치고 시스템의 성능을 저하시키며 예측할 수 없는 결과를 초래할 수 있다.  동시성 제어의 주요 개념 락 (Locking) 데이터베이스 항목에 대한 동시 액세스를 제어하기 위…","html":"<h2>데이터베이스의 동시성 제어란?</h2>\n<p>여러 트랜잭션 또는 연산이 동시에 수행될 때 데이터의 일관성을 유지하고 충돌을 방지하기 위한 매커니즘을 말한다. 잘못된 동시성 제어는 데이터의 무결성을 해치고 시스템의 성능을 저하시키며 예측할 수 없는 결과를 초래할 수 있다. </p>\n<h3>동시성 제어의 주요 개념</h3>\n<h4>락 (Locking)</h4>\n<p>데이터베이스 항목에 대한 동시 액세스를 제어하기 위해 사용된다. 트랜잭션은 데이터에 액세스 하기 전에 락을 획득해야 하며, 작업이 완료되면 락을 해제해야 한다. </p>\n<p>일반적으로 비관적 잠금과 낙관적 잠금의 두 형태로 구분된다. </p>\n<h4>트랜잭션 (Transaction)</h4>\n<p>일련의 데이터베이스 작업을 하나의 논리적 단위로 묶는 것이다. 트랜잭션은 모두 성공하거나 모두 실패해야 하며, 중단 상태에서 중단되어서는 안된다. </p>\n<h4>일관성 (Consistency)</h4>\n<p>데이터베이스의 모든 트랜잭션이 데이터를 올바른 상태에서 유지하도록 보장하는 속성이다. </p>\n<ul>\n<li>강력한 일관성 (Strong Consistency)</li>\n</ul>\n<p>데이터베이스의 모든 노드가 항상 동일한 데이터를 보게 됨을 보장한다. </p>\n<p>데이터베이스에 쓰기 작업이 수행된 후 모든 후속 읽기 작업이 그 쓰기 작업의 결과를 반영해야 한다. </p>\n<p>실시간 시스템, 금융 시스템 또는 기타 높은 무결성이 필요한 시스템에서 중요하다. </p>\n<p>일반적으로 높은 네트워크 지연과 함께 오며, 시스템의 전반적인 성능과 확장성에 영향을 미칠 수 있다. </p>\n<ul>\n<li>최종 일관성 (Eventual Consistency)</li>\n</ul>\n<p>시간이 지나면서 데이터베이스의 모든 노드가 동일한 데이터를 볼 수 있게 됨을 보장한다. </p>\n<p>쓰기 작업이 수행된 후 일정 시간이 지나면 모든 읽기 작업이 쓰기 작업의 결과를 반영한다. </p>\n<p>일반적으로 높은 확장성과 낮은 지연 시간을 제공하며 분산 시스템에서 높은 성능을 달성하는데 유리하다. </p>\n<p>일시적인 데이터 불일치를 허용하므로 애플리케이션의 로직이 이러한 불일치를 처리할 수 있도록 설계되어야 한다. </p>\n<h4>분리성 (Isolation)</h4>\n<p>각 트랜잭션이 독립적으로 실행되도록 보장하는 속성이다. 트랜잭션들 사이에 어떤 중간 상태도 다른 트랜잭션에게 보여져셔는 안된다. </p>\n<h4>지속성 (Durability)</h4>\n<p>트랜잭션이 성공적으로 완료된 후에는 시스템의 어떤 실패에도 영향 받지 않고 데이터베이스 변경이 유지되도록 보장하는 속성이다. </p>\n<h2>DynamoDB의 동시성 제어 매커니즘</h2>\n<p>DynamoDB는 동시성 제어와 데이터 일관성을 관리하기 위한 여러 매커니즘을 제공한다. </p>\n<h3>조건식 사용 (Conditional Writes)</h3>\n<p>항목을 작성하거나 업데이트 할 때 조건식을 사용하여 해당 항목이 변경되지 않았음을 확인할 수 있다. 이것은 항목이 기존에 있던 상태에 따라 연산을 수행하도록 할 때 유용하다. 예를 들어 항목이 특정값에 해당하지 않으면 업데이트 하지 않도록 요청할 수 있다. </p>\n<h3>컨설턴트 (Consistent Reads)</h3>\n<p>기본적으로 최종적으로 일관성 있는 읽기를 제공한다. 이것은 약간의 지연을 허용하면서 빠른 응답 시간을 제공한다. 하지만 바로 이전의 쓰기 작업 이후에 항목의 최신 상태를 확인하려면 Strongly Consistent Read 옵션을 사용할 수 있다. 이 옵션은 데이터의 최신 상태를 보장한다.</p>\n<hr style=\"border: none; height: 1px; background-color: #e0e0e0; margin: 16px 0;\" />\n하지만 Dynamo DB에서 동시성은 주로 다음의 두 가지 방법을 사용하여 수행된다. \n<h2>낙관적 잠금 (Optimistic Locking)</h2>\n<p>낙관적 잠금은 클라이언트가 업데이트(또는 삭제) 하려는 항목이 DynamoDB의 항목과 동일한지 확인하는 전략이다. 이 전략을 사용하면 데이터베이스 쓰기는 다른 사용자의 쓰기에 의해 덮여지는 일을 방지할 수 있다. </p>\n<p>이 전략은 DynamoDB의 테이블에 <code class=\"language-text\">버전 번호</code> 라는 속성을 사용하여 구현된다. 클라이언트가 데이터 항목을 수정할 때 클라이언트 측의 버전 번호가 테이블 항목의 버전 번호와 동일해야 한다. 버전 번호가 동일하면 다른 사용자가 레코드를 변경하지 않았음을 의미하며 쓰기를 수행할 수 있다. </p>\n<p>그러나 버전 번호가 다르면 다른 사용자가 이미 레코드를 업데이트 했을 가능성이 있으며, 이 경우 DynamoDB는 <code class=\"language-text\">ConditionalCheckFailedException</code> 예외를 발생시켜 쓰기를 거부한다. </p>\n<p>낙관적 잠금을 사용하기 위해서는 코드에서 <code class=\"language-text\">ConditionalCheckFailedException</code> 을 포함하여 <code class=\"language-text\">put</code>, <code class=\"language-text\">delete</code>, <code class=\"language-text\">update</code> 작업에 대한 조건부 쓰기를 구현해야 한다. </p>\n<h2>비관적 잠금 (Pessimistic Locking)</h2>\n<p>비관적 잠금은 동시 업데이트를 방지하기 위해 사용하는 또 다른 전략이다. 낙관적 잠금이 버전 번호를 클라이언트에 전송하는 반면, 비관적 잠금은 버전 번호를 유지하지 않고 동시 업데이트를 방지하려고 한다. </p>\n<p>대부분의 데이터베이스 서버는 트랜잭션 시작 시 잠금을 획득하고 트랜잭션이 완료된 후에만 잠금을 해제하지만, DynamoDB는 이를 약간 다르게 처리한다. DynamoDB는 데이터를 잠그지 않고, 대신 트랜잭션을 사용하여 검토 중인 데이터에 대한 다른 스레드의 변경을 식별하며, 변경이 감지되면 DynamoDB는 트랜잭션을 취소하고 오류를 발생시킨다. </p>\n<p>비관적 잠금을 구현하기 위해 <code class=\"language-text\">taransacWrite</code> 라는 메소드를 제공한다. 이를 사용하면 처리 중인 항목을 잠그지 않지만 항목을 모니터링하고, 다른 스레드가 데이터틀 수정하면 전체 트랜잭션이 데이터 변경으로 인해 실패하고 데이터를 롤백한다. </p>\n<h2>RDB 와의 차이점</h2>\n<h3>데이터 모델</h3>\n<ul>\n<li>RDB</li>\n</ul>\n<p>관계형 데이터 모델을 사용하여 테이블, 행, 열의 데이터로 형태를 데이터 구조하화며, 테이블 간의 관계를 정의하여 데이터의 무결성을 유지한다. </p>\n<ul>\n<li>DynamoDB</li>\n</ul>\n<p>NoSQL 데이터베이스로 키-값과 문서 데이터 모델을 사용한다. 데이터 무결성 보장을 위해 관계형 데이터베이스와 다른 매커니즘을 사용한다. </p>\n<h3>동시성 제어</h3>\n<ul>\n<li>RDB</li>\n</ul>\n<p>트랜잭션을 사용하여 동시성을 제어한다. 트랜잭션을 시작할 때 데이터에 잠금을 걸고, 트랜잭션이 완료될 때까지 잠음을 유지하여 다른 트랜잭션에 의한 동시 수정을 방지한다. </p>\n<ul>\n<li>DynamoDB</li>\n</ul>\n<p>낙관적 잠금과 조건부 업데이트를 사용하여 동시성을 제어하거나 <code class=\"language-text\">taransacWrite</code> API를 사용하여 트랜잭션을 지원한다. </p>\n<h3>일관성</h3>\n<ul>\n<li>RDB</li>\n</ul>\n<p>보다 강력한 일관성(Strong Consistency)을 지원한다. 트랜잭션의 모든 변경이 즉시 모든 다른 트랜잭션에 표시된다. </p>\n<ul>\n<li>DynamoDB</li>\n</ul>\n<p>기본적으로 최종 일관성(Eventual Consistency)을 제공한다. 필요한 경우 강력한 일관성(Strong Consistency)을 요청할 수 있다. </p>\n<h3>분리성</h3>\n<ul>\n<li>RDB</li>\n</ul>\n<p>트랜잭션의 분리성을 보장하여 각 트랜잭션이 독립적으로 실행되도록 한다. </p>\n<ul>\n<li>DynamoDB</li>\n</ul>\n<p><code class=\"language-text\">TransactWrite</code> API를 통해 여러 항목에 대한 트랜잭션을 지원하여 분리성을 제공한다. </p>\n<h3>지속성</h3>\n<p>두 DB 모두 트랜잭션이 성공적으로 완료된 후에는 시스템의 어떤 실패에도 영향을 받지 않고 데이터베이셔 변경이 유지되도록 지속성을 보장한다. </p>\n<h2>참고 문헌</h2>\n<p><a href=\"https://dynobase.dev/dynamodb-locking/\">https://dynobase.dev/dynamodb-locking/</a></p>","frontmatter":{"title":"DynamoDB의 동시성 제어(Concurrency Control)","date":"November 01, 2023","update":"January 29, 2024","tags":["AWS","DataBase"],"series":null},"fields":{"slug":"/DynamoDB의-동시성-제어Concurrency-Control/","readingTime":{"minutes":10.69}}},"seriesList":{"edges":[{"node":{"id":"0b1c2d5a-2b50-5b66-afbf-b01926c0dd54","fields":{"slug":"/화상상담을-위한-Janus-구성/"},"frontmatter":{"title":"화상상담을 위한 Janus 구성"}}},{"node":{"id":"ba0f5f4f-cf7f-5445-b72d-26423452c314","fields":{"slug":"/JavaScript의-특징-브라우저-동작-원리/"},"frontmatter":{"title":"JavaScript의 특징, 브라우저 동작 원리"}}},{"node":{"id":"865e05e1-e5c6-526f-92e6-4f2d31e585c0","fields":{"slug":"/JavaScript-기본-문법/"},"frontmatter":{"title":"JavaScript 기본 문법"}}},{"node":{"id":"7923e0b3-15b2-59cd-b418-b200395d7e13","fields":{"slug":"/JavaScript의-변수/"},"frontmatter":{"title":"JavaScript의 변수"}}},{"node":{"id":"9bbc5bf0-245d-53a4-8d96-76d51c912484","fields":{"slug":"/JavaScript의-타입-변환과-단축-평가/"},"frontmatter":{"title":"JavaScript의 타입 변환과 단축 평가"}}},{"node":{"id":"10b4111d-0724-57fb-97fd-db82c36877c8","fields":{"slug":"/JavaScript-클로저/"},"frontmatter":{"title":"JavaScript 클로저"}}},{"node":{"id":"a7f609aa-6669-5a16-8d61-79ff5de2a850","fields":{"slug":"/NestJS-소개/"},"frontmatter":{"title":"NestJS 소개"}}},{"node":{"id":"b7249e32-01e2-5eff-814e-dc0329a9a4be","fields":{"slug":"/DB-튜닝-경험/"},"frontmatter":{"title":"DB 튜닝 경험"}}},{"node":{"id":"e5f5c9e2-6bf3-5850-90ae-6430e4d95005","fields":{"slug":"/Morethan-log-설치/"},"frontmatter":{"title":"MORETHAN-LOG 설치"}}},{"node":{"id":"6c69369d-f006-5594-a022-9ea5567fb26c","fields":{"slug":"/RDB관계형-데이터베이스--RDBMS/"},"frontmatter":{"title":"RDB(관계형 데이터베이스) + RDBMS"}}},{"node":{"id":"89a07626-c378-5eef-ab25-298f0289a6c4","fields":{"slug":"/var와-letconst/"},"frontmatter":{"title":"var와 let,const"}}},{"node":{"id":"f28bfc02-4c1e-5920-a787-103203356d35","fields":{"slug":"/Morethan-log-수정/"},"frontmatter":{"title":"MORETHAN-LOG 수정"}}},{"node":{"id":"eaf49eaa-1b96-520c-80ae-bce85fa3dd50","fields":{"slug":"/NestJS-설치/"},"frontmatter":{"title":"NestJS 설치"}}},{"node":{"id":"296115be-6c25-52e7-ae91-d0d9894fbf83","fields":{"slug":"/NestJS의-디렉토리-구조/"},"frontmatter":{"title":"NestJS의 디렉토리 구조"}}},{"node":{"id":"fc0df220-8d9f-5fdf-89d7-10aef8b7fe2d","fields":{"slug":"/웹-사이트-프로젝트-vs/"},"frontmatter":{"title":"웹 사이트 프로젝트 vs "}}},{"node":{"id":"b658ac7d-3769-5129-921f-e7cc0ae0bf0b","fields":{"slug":"/Nuget-패키지-dll-추출/"},"frontmatter":{"title":"Nuget 패키지 dll 추출"}}},{"node":{"id":"136d8a02-7e41-5953-a5ff-5b398c56b949","fields":{"slug":"/무료-웹-호스팅-비교/"},"frontmatter":{"title":"무료 웹 호스팅 비교"}}},{"node":{"id":"342535ab-e5ea-5f97-96aa-7b7083802c91","fields":{"slug":"/PRG-패턴-PostRedirectGet/"},"frontmatter":{"title":"PRG 패턴 (Post/Redirect/Get)"}}},{"node":{"id":"a2b877f8-8776-52e2-9dfb-7f2284382d7b","fields":{"slug":"/Python-venv-Windows/"},"frontmatter":{"title":"Python venv (Windows)"}}},{"node":{"id":"b9e5b3f8-0cbb-5df9-96f2-57c7b9432a5a","fields":{"slug":"/print와-pprint/"},"frontmatter":{"title":"print와 pprint"}}},{"node":{"id":"37c3e0bc-d4eb-50d5-908e-006f907ab976","fields":{"slug":"/정규화와-역정규화/"},"frontmatter":{"title":"정규화와 역정규화"}}},{"node":{"id":"4766b3f5-2e94-5215-b60c-2a4c9efdf85c","fields":{"slug":"/트래픽-튜닝/"},"frontmatter":{"title":"트래픽 튜닝"}}},{"node":{"id":"95b80c29-860e-50fb-a858-299c5302851d","fields":{"slug":"/npx/"},"frontmatter":{"title":"npx"}}},{"node":{"id":"cf8d56a0-7ddf-55c2-8307-224c70fda0b8","fields":{"slug":"/Branch/"},"frontmatter":{"title":"Branch"}}},{"node":{"id":"9298e625-ce38-505d-b91e-707c01b1f87b","fields":{"slug":"/Typescript-시작하기/"},"frontmatter":{"title":"Typescript 시작하기"}}},{"node":{"id":"93dffdfc-ea33-54e1-b695-128fe51dcfef","fields":{"slug":"/gitignore/"},"frontmatter":{"title":"gitignore"}}},{"node":{"id":"d64bb483-1570-5916-8f9b-ef8dbadd8463","fields":{"slug":"/Factory-Pattern/"},"frontmatter":{"title":"Factory Pattern"}}},{"node":{"id":"d7e56701-b302-5321-8e5d-0f1c8cfbb6f0","fields":{"slug":"/네이밍-규칙naming-conventions/"},"frontmatter":{"title":"네이밍 규칙(naming conventions)"}}},{"node":{"id":"92a4a9cf-53b4-50d9-af6e-c91877b291be","fields":{"slug":"/AWS-API-Gateway/"},"frontmatter":{"title":"AWS API Gateway"}}},{"node":{"id":"d3de4626-da0e-57de-bead-ea20a1ffbec8","fields":{"slug":"/ColdStart/"},"frontmatter":{"title":"ColdStart"}}},{"node":{"id":"7f6655fd-5e49-5465-8b07-15ddc1b904d4","fields":{"slug":"/Serverless/"},"frontmatter":{"title":"Serverless"}}},{"node":{"id":"0e1b304d-0cc9-5113-8c00-daca0b6edeb8","fields":{"slug":"/Dynamo-DB/"},"frontmatter":{"title":"Dynamo DB"}}},{"node":{"id":"93226ec3-15ec-5e8b-bf3c-010d555895f2","fields":{"slug":"/NoSQL/"},"frontmatter":{"title":"NoSQL"}}},{"node":{"id":"805c968c-8b1e-534a-892b-da2c9f204ebb","fields":{"slug":"/REST/"},"frontmatter":{"title":"REST"}}},{"node":{"id":"56eb36b0-fd1a-52dd-863c-2975d103b0a3","fields":{"slug":"/TypeError-non-default-argument-content-follows-default-argument/"},"frontmatter":{"title":"TypeError: non-default argument 'content' follows default argument"}}},{"node":{"id":"088f281f-5b0a-5b02-9258-ac82c873bbed","fields":{"slug":"/브랜치-관리-전략/"},"frontmatter":{"title":"브랜치 관리 전략"}}},{"node":{"id":"9ef4592a-7d74-5de4-aa09-c4db1c303e56","fields":{"slug":"/Unit-Test단위-테스트/"},"frontmatter":{"title":"Unit Test(단위 테스트)"}}},{"node":{"id":"4f8e8e4d-42af-50a8-9cbc-5e516c833924","fields":{"slug":"/__post_init__/"},"frontmatter":{"title":"__post_init__"}}},{"node":{"id":"dcb54926-ac77-580e-bd41-109318aacde8","fields":{"slug":"/dataclass/"},"frontmatter":{"title":"dataclass"}}},{"node":{"id":"8b41a2d7-97b5-5ccd-8e10-32cc16787599","fields":{"slug":"/FastAPI와-DDD/"},"frontmatter":{"title":"FastAPI와 DDD"}}},{"node":{"id":"a12b9ab7-9525-563c-bcef-a51f1dc34c68","fields":{"slug":"/vercel-배포-자동화/"},"frontmatter":{"title":"vercel 배포 자동화"}}},{"node":{"id":"087cee46-3588-557e-926c-721aa25a85e5","fields":{"slug":"/AWS-ECSElastic-Container-Service/"},"frontmatter":{"title":"AWS ECS(Elastic Container Service)"}}},{"node":{"id":"5dd36c68-ebe7-5947-8632-4df2aa441c10","fields":{"slug":"/Blue-Green-Deploy-전략/"},"frontmatter":{"title":"Blue Green Deploy 전략"}}},{"node":{"id":"36e71563-f275-5b66-a735-9bca8e77be70","fields":{"slug":"/CloudFront/"},"frontmatter":{"title":"CloudFront"}}},{"node":{"id":"95b90c95-4fe9-5183-a2b8-ac11c913709a","fields":{"slug":"/Poetry/"},"frontmatter":{"title":"Poetry"}}},{"node":{"id":"9ac81ae8-f2d6-5d58-b563-c3c4f2654a87","fields":{"slug":"/DynamoDB의-동시성-제어Concurrency-Control/"},"frontmatter":{"title":"DynamoDB의 동시성 제어(Concurrency Control)"}}},{"node":{"id":"92de3e48-5133-5d3d-9535-f8e144681d9c","fields":{"slug":"/FastAPI/"},"frontmatter":{"title":"FastAPI"}}},{"node":{"id":"39985c94-a202-5791-a9e7-9c0570dd6f17","fields":{"slug":"/Pydantic-모델/"},"frontmatter":{"title":"Pydantic 모델"}}},{"node":{"id":"64c425f1-1e03-5e21-a968-09ac10bb9c69","fields":{"slug":"/FastAPI의-데코레이터/"},"frontmatter":{"title":"FastAPI의 데코레이터"}}},{"node":{"id":"4e0bb11a-ea1e-59b3-8be1-0854a8b62285","fields":{"slug":"/생성기generate-패턴/"},"frontmatter":{"title":"생성기(generate) 패턴"}}},{"node":{"id":"5892a2b8-8e43-5d98-a45b-9dea3b735a4b","fields":{"slug":"/FastAPI에서-데코레이터와-Dependency/"},"frontmatter":{"title":"FastAPI에서 데코레이터와 Dependency"}}},{"node":{"id":"79c5176e-a451-50a0-b279-97494de5723c","fields":{"slug":"/FastAPI와-asyncio/"},"frontmatter":{"title":"FastAPI와 asyncio"}}},{"node":{"id":"77e03930-3b70-5238-b971-7f8698b5b20d","fields":{"slug":"/aiohttp/"},"frontmatter":{"title":"aiohttp"}}},{"node":{"id":"d2f7ae9a-25ac-5e41-a864-ec2a92e9d03c","fields":{"slug":"/단축어로-SLACK-프로필-변경하기/"},"frontmatter":{"title":"단축어로 SLACK 프로필 변경하기"}}},{"node":{"id":"3a4a3aac-0395-5055-a752-226fbd20ebb1","fields":{"slug":"/단축어로SLACK프로필변경하기/"},"frontmatter":{"title":"단축어로 SLACK 프로필 변경하기"}}},{"node":{"id":"cd6d5ba0-d547-54b2-a3cc-d0334ad8b495","fields":{"slug":"/PynamoDB와-boto3-PynamoDB의-커넥션/"},"frontmatter":{"title":"PynamoDB와 boto3, PynamoDB의 커넥션"}}},{"node":{"id":"ea2342d7-c522-5677-9291-561c9335c798","fields":{"slug":"/FastAPI에서-Postgresql의-커넥션-관리/"},"frontmatter":{"title":"FastAPI에서 Postgresql의 커넥션 관리"}}},{"node":{"id":"c2f4e2af-2288-5a39-ac38-cd91a7695044","fields":{"slug":"/Sqlalchemy-비동기-엔진에서의-Postgresql-Pooler/"},"frontmatter":{"title":"Sqlalchemy 비동기 엔진에서의 Postgresql Pooler"}}},{"node":{"id":"43b92004-acc9-5076-b40b-3db770d558b5","fields":{"slug":"/SqlAlchemy의-QueuePool/"},"frontmatter":{"title":"SqlAlchemy의 QueuePool"}}},{"node":{"id":"17975177-0174-5179-a7c0-62a08a95069f","fields":{"slug":"/Union-Type/"},"frontmatter":{"title":"Union Type"}}},{"node":{"id":"b03c889e-3ff8-53ae-816d-24fbbd5f0bc1","fields":{"slug":"/우분투-용량-관리/"},"frontmatter":{"title":"우분투 용량 관리"}}},{"node":{"id":"ef6593f1-fa14-5b7e-8ae4-fa9f252ea4b5","fields":{"slug":"/Sqlalchemy에서의-트랜잭션-격리-수준-구현/"},"frontmatter":{"title":"Sqlalchemy에서의 트랜잭션 격리 수준 구현"}}},{"node":{"id":"a94c5f4c-8873-581a-9098-31d9ee8c312a","fields":{"slug":"/트랜잭션-격리-수준Transaction-Isolation-Level/"},"frontmatter":{"title":"트랜잭션 격리 수준(Transaction Isolation Level)"}}}]},"previous":{"fields":{"slug":"/Poetry/"},"frontmatter":{"title":"Poetry"}},"next":{"fields":{"slug":"/FastAPI/"},"frontmatter":{"title":"FastAPI"}}},"pageContext":{"id":"9ac81ae8-f2d6-5d58-b563-c3c4f2654a87","series":null,"previousPostId":"95b90c95-4fe9-5183-a2b8-ac11c913709a","nextPostId":"92de3e48-5133-5d3d-9535-f8e144681d9c"}},"staticQueryHashes":[],"slicesMap":{}}