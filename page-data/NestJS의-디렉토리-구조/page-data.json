{"componentChunkName":"component---src-templates-post-jsx","path":"/NestJS의-디렉토리-구조/","result":{"data":{"site":{"siteMetadata":{"title":"SharkniA"}},"markdownRemark":{"id":"296115be-6c25-52e7-ae91-d0d9894fbf83","excerpt":"NestJS는 MVC 패턴을 지원하지만, 전통적인 Express.js 스타일의 MVC 구조와는 약간 차이가 있다.  NestJS의 기본적인 디렉토리 구조는 다음과 같다.  NestJS에서는 각 기능별로 (예: 사용자, 포스트, 댓글 등) 모듈을 분리하는 것을 권장한다. 따라서 각 기능별로 모듈을 생성하고, 해당 모듈 내에서 MVC 구조를 구성하는 것이 더…","html":"<p>NestJS는 MVC 패턴을 지원하지만, 전통적인 Express.js 스타일의 MVC 구조와는 약간 차이가 있다. </p>\n<p>NestJS의 기본적인 디렉토리 구조는 다음과 같다. </p>\n<div class=\"gatsby-highlight\" data-language=\"lua\"><pre class=\"language-lua\"><code class=\"language-lua\">src<span class=\"token operator\">/</span>\n<span class=\"token operator\">|</span><span class=\"token comment\">-- app.module.ts         // 앱의 주 모듈</span>\n<span class=\"token operator\">|</span><span class=\"token comment\">-- main.ts               // 앱의 진입점</span>\n<span class=\"token operator\">|</span><span class=\"token comment\">-- controllers/          // 컨트롤러 폴더</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span><span class=\"token comment\">-- app.controller.ts</span>\n<span class=\"token operator\">|</span><span class=\"token comment\">-- services/             // 서비스 폴더</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span><span class=\"token comment\">-- app.service.ts</span></code></pre></div>\n<p>NestJS에서는 각 기능별로 (예: 사용자, 포스트, 댓글 등) 모듈을 분리하는 것을 권장한다. 따라서 각 기능별로 모듈을 생성하고, 해당 모듈 내에서 MVC 구조를 구성하는 것이 더 일반적이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"lua\"><pre class=\"language-lua\"><code class=\"language-lua\">src<span class=\"token operator\">/</span>\n<span class=\"token operator\">|</span><span class=\"token comment\">-- app.module.ts</span>\n<span class=\"token operator\">|</span><span class=\"token comment\">-- main.ts</span>\n<span class=\"token operator\">|</span><span class=\"token comment\">-- user/</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span><span class=\"token comment\">-- user.module.ts</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span><span class=\"token comment\">-- user.controller.ts</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span><span class=\"token comment\">-- user.service.ts</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span><span class=\"token comment\">-- user.model.ts (또는 user.entity.ts)</span>\n<span class=\"token operator\">|</span><span class=\"token comment\">-- post/</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span><span class=\"token comment\">-- post.module.ts</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span><span class=\"token comment\">-- post.controller.ts</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span><span class=\"token comment\">-- post.service.ts</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span><span class=\"token comment\">-- post.model.ts (또는 post.entity.ts)</span></code></pre></div>\n<h4>MVC 패턴과의 비교</h4>\n<ul>\n<li>\n<p>NestJS의 장점:</p>\n<ol>\n<li>모듈화: NestJS는 기능별로 코드를 모듈로 분리하고 관리하도록 설계되었다. 이로 인해 각 기능이 독립적으로 개발되고 테스트될 수 있으며, 코드 재사용성도 향상된다.</li>\n<li>의존성 주입: NestJS는 내장된 의존성 주입 컨테이너를 제공하므로, 코드의 결합도를 낮추고 유닛 테스트를 쉽게 할 수 있다.</li>\n<li>타입 안전성: TypeScript를 기본 언어로 사용하기 때문에, 타입 검사와 관련된 오류를 컴파일 시점에 발견할 수 있다.</li>\n<li>데코레이터 기반: 데코레이터를 사용하여 메타데이터를 기반으로 하는 다양한 기능을 쉽게 추가할 수 있다.</li>\n<li>플랫폼 독립성: NestJS는 기본적으로 Express.js를 사용하지만, Fastify와 같은 다른 HTTP 서버 라이브러리로 쉽게 전환할 수 있다.</li>\n</ol>\n</li>\n<li>\n<p>NestJS의 단점:</p>\n<ol>\n<li>학습 곡선: NestJS에는 다양한 개념과 기능이 있으므로 초기에 학습하기가 다소 어려울 수 있다.</li>\n<li>추가적인 추상화: 모듈화와 의존성 주입과 같은 기능들은 유용하지만, 간단한 애플리케이션에서는 오버헤드로 느껴질 수 있다.</li>\n</ol>\n</li>\n<li>\n<p>MVC 패턴의 장점:</p>\n<ol>\n<li>간단함: 전통적인 MVC 패턴은 많은 웹 개발자들에게 잘 알려져 있으므로 학습 곡선이 낮다.</li>\n<li>직관성: 모델, 뷰, 컨트롤러의 구조는 웹 애플리케이션의 데이터 흐름을 이해하기 쉽다.</li>\n</ol>\n</li>\n<li>\n<p>MVC 패턴의 단점:</p>\n<ol>\n<li>확장성: 애플리케이션의 복잡도가 증가하면 MVC 구조만으로는 코드의 복잡성을 관리하기 어려울 수 있다.</li>\n<li>타이트 커플링: 모델, 뷰, 컨트롤러 간에 타이트 커플링이 발생할 수 있어, 변경 사항이 여러 컴포넌트에 영향을 줄 수 있다.</li>\n</ol>\n</li>\n</ul>","frontmatter":{"title":"NestJS의 디렉토리 구조","date":"August 20, 2023","update":"February 02, 2024","tags":["NestJS"],"series":null},"fields":{"slug":"/NestJS의-디렉토리-구조/","readingTime":{"minutes":3.615}}},"seriesList":{"edges":[{"node":{"id":"0b1c2d5a-2b50-5b66-afbf-b01926c0dd54","fields":{"slug":"/화상상담을-위한-Janus-구성/"},"frontmatter":{"title":"화상상담을 위한 Janus 구성"}}},{"node":{"id":"ba0f5f4f-cf7f-5445-b72d-26423452c314","fields":{"slug":"/JavaScript의-특징-브라우저-동작-원리/"},"frontmatter":{"title":"JavaScript의 특징, 브라우저 동작 원리"}}},{"node":{"id":"865e05e1-e5c6-526f-92e6-4f2d31e585c0","fields":{"slug":"/JavaScript-기본-문법/"},"frontmatter":{"title":"JavaScript 기본 문법"}}},{"node":{"id":"7923e0b3-15b2-59cd-b418-b200395d7e13","fields":{"slug":"/JavaScript의-변수/"},"frontmatter":{"title":"JavaScript의 변수"}}},{"node":{"id":"9bbc5bf0-245d-53a4-8d96-76d51c912484","fields":{"slug":"/JavaScript의-타입-변환과-단축-평가/"},"frontmatter":{"title":"JavaScript의 타입 변환과 단축 평가"}}},{"node":{"id":"10b4111d-0724-57fb-97fd-db82c36877c8","fields":{"slug":"/JavaScript-클로저/"},"frontmatter":{"title":"JavaScript 클로저"}}},{"node":{"id":"a7f609aa-6669-5a16-8d61-79ff5de2a850","fields":{"slug":"/NestJS-소개/"},"frontmatter":{"title":"NestJS 소개"}}},{"node":{"id":"b7249e32-01e2-5eff-814e-dc0329a9a4be","fields":{"slug":"/DB-튜닝-경험/"},"frontmatter":{"title":"DB 튜닝 경험"}}},{"node":{"id":"4b0285f5-399e-5287-bc09-43732b05ab0a","fields":{"slug":"/MORETHAN-LOG-설치/"},"frontmatter":{"title":"MORETHAN-LOG 설치"}}},{"node":{"id":"0571e650-66d9-5b4a-ac9d-af8e59996f3c","fields":{"slug":"/RDB관계형-데이터베이스-RDBMS/"},"frontmatter":{"title":"RDB(관계형 데이터베이스) + RDBMS"}}},{"node":{"id":"89a07626-c378-5eef-ab25-298f0289a6c4","fields":{"slug":"/var와-letconst/"},"frontmatter":{"title":"var와 let,const"}}},{"node":{"id":"83f7fa8f-6731-55b5-a1da-4751de4ecf8d","fields":{"slug":"/MORETHAN-LOG-수정/"},"frontmatter":{"title":"MORETHAN-LOG 수정"}}},{"node":{"id":"eaf49eaa-1b96-520c-80ae-bce85fa3dd50","fields":{"slug":"/NestJS-설치/"},"frontmatter":{"title":"NestJS 설치"}}},{"node":{"id":"296115be-6c25-52e7-ae91-d0d9894fbf83","fields":{"slug":"/NestJS의-디렉토리-구조/"},"frontmatter":{"title":"NestJS의 디렉토리 구조"}}},{"node":{"id":"f26e28a5-93cd-598d-8c25-f164890ce172","fields":{"slug":"/웹-사이트-프로젝트-vs-웹-응용-프로그램-프로젝트/"},"frontmatter":{"title":"웹 사이트 프로젝트 vs 웹 응용 프로그램 프로젝트"}}},{"node":{"id":"136d8a02-7e41-5953-a5ff-5b398c56b949","fields":{"slug":"/무료-웹-호스팅-비교/"},"frontmatter":{"title":"무료 웹 호스팅 비교"}}},{"node":{"id":"b658ac7d-3769-5129-921f-e7cc0ae0bf0b","fields":{"slug":"/Nuget-패키지-dll-추출/"},"frontmatter":{"title":"Nuget 패키지 dll 추출"}}},{"node":{"id":"37c3e0bc-d4eb-50d5-908e-006f907ab976","fields":{"slug":"/정규화와-역정규화/"},"frontmatter":{"title":"정규화와 역정규화"}}},{"node":{"id":"4766b3f5-2e94-5215-b60c-2a4c9efdf85c","fields":{"slug":"/트래픽-튜닝/"},"frontmatter":{"title":"트래픽 튜닝"}}},{"node":{"id":"342535ab-e5ea-5f97-96aa-7b7083802c91","fields":{"slug":"/PRG-패턴-PostRedirectGet/"},"frontmatter":{"title":"PRG 패턴 (Post/Redirect/Get)"}}},{"node":{"id":"b9e5b3f8-0cbb-5df9-96f2-57c7b9432a5a","fields":{"slug":"/print와-pprint/"},"frontmatter":{"title":"print와 pprint"}}},{"node":{"id":"a2b877f8-8776-52e2-9dfb-7f2284382d7b","fields":{"slug":"/Python-venv-Windows/"},"frontmatter":{"title":"Python venv (Windows)"}}},{"node":{"id":"95b80c29-860e-50fb-a858-299c5302851d","fields":{"slug":"/npx/"},"frontmatter":{"title":"npx"}}},{"node":{"id":"cf8d56a0-7ddf-55c2-8307-224c70fda0b8","fields":{"slug":"/Branch/"},"frontmatter":{"title":"Branch"}}},{"node":{"id":"dcb582da-6cbc-50b3-8186-ddc11fc17b08","fields":{"slug":"/DataTable-클래스/"},"frontmatter":{"title":"DataTable 클래스"}}},{"node":{"id":"9298e625-ce38-505d-b91e-707c01b1f87b","fields":{"slug":"/Typescript-시작하기/"},"frontmatter":{"title":"Typescript 시작하기"}}},{"node":{"id":"93dffdfc-ea33-54e1-b695-128fe51dcfef","fields":{"slug":"/gitignore/"},"frontmatter":{"title":"gitignore"}}},{"node":{"id":"d7e56701-b302-5321-8e5d-0f1c8cfbb6f0","fields":{"slug":"/네이밍-규칙naming-conventions/"},"frontmatter":{"title":"네이밍 규칙(naming conventions)"}}},{"node":{"id":"d64bb483-1570-5916-8f9b-ef8dbadd8463","fields":{"slug":"/Factory-Pattern/"},"frontmatter":{"title":"Factory Pattern"}}},{"node":{"id":"7f6655fd-5e49-5465-8b07-15ddc1b904d4","fields":{"slug":"/Serverless/"},"frontmatter":{"title":"Serverless"}}},{"node":{"id":"d3de4626-da0e-57de-bead-ea20a1ffbec8","fields":{"slug":"/ColdStart/"},"frontmatter":{"title":"ColdStart"}}},{"node":{"id":"92a4a9cf-53b4-50d9-af6e-c91877b291be","fields":{"slug":"/AWS-API-Gateway/"},"frontmatter":{"title":"AWS API Gateway"}}},{"node":{"id":"0e1b304d-0cc9-5113-8c00-daca0b6edeb8","fields":{"slug":"/Dynamo-DB/"},"frontmatter":{"title":"Dynamo DB"}}},{"node":{"id":"93226ec3-15ec-5e8b-bf3c-010d555895f2","fields":{"slug":"/NoSQL/"},"frontmatter":{"title":"NoSQL"}}},{"node":{"id":"805c968c-8b1e-534a-892b-da2c9f204ebb","fields":{"slug":"/REST/"},"frontmatter":{"title":"REST"}}},{"node":{"id":"56eb36b0-fd1a-52dd-863c-2975d103b0a3","fields":{"slug":"/TypeError-non-default-argument-content-follows-default-argument/"},"frontmatter":{"title":"TypeError: non-default argument 'content' follows default argument"}}},{"node":{"id":"088f281f-5b0a-5b02-9258-ac82c873bbed","fields":{"slug":"/브랜치-관리-전략/"},"frontmatter":{"title":"브랜치 관리 전략"}}},{"node":{"id":"9ef4592a-7d74-5de4-aa09-c4db1c303e56","fields":{"slug":"/Unit-Test단위-테스트/"},"frontmatter":{"title":"Unit Test(단위 테스트)"}}},{"node":{"id":"4f8e8e4d-42af-50a8-9cbc-5e516c833924","fields":{"slug":"/__post_init__/"},"frontmatter":{"title":"__post_init__"}}},{"node":{"id":"dcb54926-ac77-580e-bd41-109318aacde8","fields":{"slug":"/dataclass/"},"frontmatter":{"title":"dataclass"}}},{"node":{"id":"8b41a2d7-97b5-5ccd-8e10-32cc16787599","fields":{"slug":"/FastAPI와-DDD/"},"frontmatter":{"title":"FastAPI와 DDD"}}},{"node":{"id":"a12b9ab7-9525-563c-bcef-a51f1dc34c68","fields":{"slug":"/vercel-배포-자동화/"},"frontmatter":{"title":"vercel 배포 자동화"}}},{"node":{"id":"087cee46-3588-557e-926c-721aa25a85e5","fields":{"slug":"/AWS-ECSElastic-Container-Service/"},"frontmatter":{"title":"AWS ECS(Elastic Container Service)"}}},{"node":{"id":"36e71563-f275-5b66-a735-9bca8e77be70","fields":{"slug":"/CloudFront/"},"frontmatter":{"title":"CloudFront"}}},{"node":{"id":"5dd36c68-ebe7-5947-8632-4df2aa441c10","fields":{"slug":"/Blue-Green-Deploy-전략/"},"frontmatter":{"title":"Blue Green Deploy 전략"}}},{"node":{"id":"95b90c95-4fe9-5183-a2b8-ac11c913709a","fields":{"slug":"/Poetry/"},"frontmatter":{"title":"Poetry"}}},{"node":{"id":"9ac81ae8-f2d6-5d58-b563-c3c4f2654a87","fields":{"slug":"/DynamoDB의-동시성-제어Concurrency-Control/"},"frontmatter":{"title":"DynamoDB의 동시성 제어(Concurrency Control)"}}},{"node":{"id":"92de3e48-5133-5d3d-9535-f8e144681d9c","fields":{"slug":"/FastAPI/"},"frontmatter":{"title":"FastAPI"}}},{"node":{"id":"39985c94-a202-5791-a9e7-9c0570dd6f17","fields":{"slug":"/Pydantic-모델/"},"frontmatter":{"title":"Pydantic 모델"}}},{"node":{"id":"4e0bb11a-ea1e-59b3-8be1-0854a8b62285","fields":{"slug":"/생성기generate-패턴/"},"frontmatter":{"title":"생성기(generate) 패턴"}}},{"node":{"id":"64c425f1-1e03-5e21-a968-09ac10bb9c69","fields":{"slug":"/FastAPI의-데코레이터/"},"frontmatter":{"title":"FastAPI의 데코레이터"}}},{"node":{"id":"5892a2b8-8e43-5d98-a45b-9dea3b735a4b","fields":{"slug":"/FastAPI에서-데코레이터와-Dependency/"},"frontmatter":{"title":"FastAPI에서 데코레이터와 Dependency"}}},{"node":{"id":"79c5176e-a451-50a0-b279-97494de5723c","fields":{"slug":"/FastAPI와-asyncio/"},"frontmatter":{"title":"FastAPI와 asyncio"}}},{"node":{"id":"77e03930-3b70-5238-b971-7f8698b5b20d","fields":{"slug":"/aiohttp/"},"frontmatter":{"title":"aiohttp"}}},{"node":{"id":"d2f7ae9a-25ac-5e41-a864-ec2a92e9d03c","fields":{"slug":"/단축어로-SLACK-프로필-변경하기/"},"frontmatter":{"title":"단축어로 SLACK 프로필 변경하기"}}},{"node":{"id":"cd6d5ba0-d547-54b2-a3cc-d0334ad8b495","fields":{"slug":"/PynamoDB와-boto3-PynamoDB의-커넥션/"},"frontmatter":{"title":"PynamoDB와 boto3, PynamoDB의 커넥션"}}},{"node":{"id":"ea2342d7-c522-5677-9291-561c9335c798","fields":{"slug":"/FastAPI에서-Postgresql의-커넥션-관리/"},"frontmatter":{"title":"FastAPI에서 Postgresql의 커넥션 관리"}}},{"node":{"id":"c2f4e2af-2288-5a39-ac38-cd91a7695044","fields":{"slug":"/Sqlalchemy-비동기-엔진에서의-Postgresql-Pooler/"},"frontmatter":{"title":"Sqlalchemy 비동기 엔진에서의 Postgresql Pooler"}}},{"node":{"id":"43b92004-acc9-5076-b40b-3db770d558b5","fields":{"slug":"/SqlAlchemy의-QueuePool/"},"frontmatter":{"title":"SqlAlchemy의 QueuePool"}}},{"node":{"id":"6ae58778-9c0a-5ab1-9953-509e3c2f1c55","fields":{"slug":"/Pydantic-Model의-응용/"},"frontmatter":{"title":"Pydantic Model의 응용"}}},{"node":{"id":"17975177-0174-5179-a7c0-62a08a95069f","fields":{"slug":"/Union-Type/"},"frontmatter":{"title":"Union Type"}}},{"node":{"id":"b03c889e-3ff8-53ae-816d-24fbbd5f0bc1","fields":{"slug":"/우분투-용량-관리/"},"frontmatter":{"title":"우분투 용량 관리"}}},{"node":{"id":"ef6593f1-fa14-5b7e-8ae4-fa9f252ea4b5","fields":{"slug":"/Sqlalchemy에서의-트랜잭션-격리-수준-구현/"},"frontmatter":{"title":"Sqlalchemy에서의 트랜잭션 격리 수준 구현"}}},{"node":{"id":"a94c5f4c-8873-581a-9098-31d9ee8c312a","fields":{"slug":"/트랜잭션-격리-수준Transaction-Isolation-Level/"},"frontmatter":{"title":"트랜잭션 격리 수준(Transaction Isolation Level)"}}},{"node":{"id":"b4c0942d-b89b-5a3d-bf07-27ecfb413030","fields":{"slug":"/Sqlalchemy의-func/"},"frontmatter":{"title":"Sqlalchemy의 func"}}},{"node":{"id":"c6d453c8-6c2d-5df6-b2cc-c5e90214c848","fields":{"slug":"/동시성-제어문제-해결/"},"frontmatter":{"title":"동시성 제어문제 해결"}}},{"node":{"id":"c6d9101c-c735-5ab0-8813-2ebc71a90dec","fields":{"slug":"/PostgreSQL-Advisory-Locks-트랜잭션-레벨에서-구현/"},"frontmatter":{"title":"PostgreSQL Advisory Locks 트랜잭션 레벨에서 구현"}}},{"node":{"id":"aaef2c0a-831d-5bf6-b1bd-7a7208f3e0d9","fields":{"slug":"/vscode-quick-Suggestions/"},"frontmatter":{"title":"vscode-quick Suggestions"}}},{"node":{"id":"1788468a-a058-5b9e-8b9c-457a04951c79","fields":{"slug":"/NotionAPI를-활용한-자동-포스팅10/"},"frontmatter":{"title":"NotionAPI를 활용한 자동 포스팅(10)"}}},{"node":{"id":"b92fcc1f-ac7a-55ba-b5dc-eeef8264b2c5","fields":{"slug":"/Typescript의-열거형/"},"frontmatter":{"title":"Typescript의 열거형"}}}]},"previous":{"fields":{"slug":"/NestJS-설치/"},"frontmatter":{"title":"NestJS 설치"}},"next":{"fields":{"slug":"/웹-사이트-프로젝트-vs-웹-응용-프로그램-프로젝트/"},"frontmatter":{"title":"웹 사이트 프로젝트 vs 웹 응용 프로그램 프로젝트"}}},"pageContext":{"id":"296115be-6c25-52e7-ae91-d0d9894fbf83","series":null,"previousPostId":"eaf49eaa-1b96-520c-80ae-bce85fa3dd50","nextPostId":"f26e28a5-93cd-598d-8c25-f164890ce172"}},"staticQueryHashes":[],"slicesMap":{}}