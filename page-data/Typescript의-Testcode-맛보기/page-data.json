{"componentChunkName":"component---src-templates-post-jsx","path":"/Typescript의-Testcode-맛보기/","result":{"data":{"site":{"siteMetadata":{"title":"SharkniA"}},"markdownRemark":{"id":"db0bcfb1-23c4-5eca-b50b-8da83d567a83","excerpt":"서론 파이썬에서 잠깐 테스트코드를 맛본적이 있습니다. 문법 자체는 조금 복잡했지만(익숙하지 않았지만) 설치 자체는 그다지 어렵지 않았던 것으로 기억합니다.  그래서 타입스크립트에서도 그럴 줄 알았습니다.  설치 일단, 설치가 한 두개가 아니었습니다. 또, 설치하는 패키지를 package.json 파일의 devDependencies에 추가했습니다. 이는 개…","html":"<h2>서론</h2>\n<p>파이썬에서 잠깐 테스트코드를 맛본적이 있습니다. 문법 자체는 조금 복잡했지만(익숙하지 않았지만) 설치 자체는 그다지 어렵지 않았던 것으로 기억합니다. </p>\n<p>그래서 타입스크립트에서도 그럴 줄 알았습니다. </p>\n<h2>설치</h2>\n<p>일단, 설치가 한 두개가 아니었습니다. 또, 설치하는 패키지를 package.json 파일의 devDependencies에 추가했습니다. 이는 개발 시에만 필요한 의존성을 나타냅니다. 처음에는 멋모르고 다음의 패키지 하나만 설치해주었습니다. </p>\n<h3>@types/jest 설치</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> i --save-dev @types/jest</code></pre></div>\n<h4><code class=\"language-text\">--save-dev</code></h4>\n<p>설치하는 패키지를 package.json 파일의 devDependencies에 추가하는 옵션이 바로 이 옵션입니다. 프로덕션에서는 필요하지 않은 테스트 라이브러리, 빌드 도구 등을 설치할 때에 해당 옵션을 붙여 설치합니다. 이 옵션을 붙여 설치할 경우, 다음과 같이 추가됩니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">\"devDependencies\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token key atrule\">\"@types/jest\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^26.0.0\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이후 빌드 시스템이나 배포 파이프라인에서 <code class=\"language-text\">npm install --production</code> 명령어를 사용하면 이 곳에 정의된 패키지들은 설치를 건너뛰게 됩니다. </p>\n<h4><code class=\"language-text\">@types/jest</code></h4>\n<p>Jest는 자바스크립트 테스팅 프레임워크입니다. <code class=\"language-text\">@types/jest</code> **** 는 Jest의 타입 정의를 포함하는 타입스크립트 패키지입니다. 타입스크립트 프로젝트에서 Jest를 사용할 때, Jest의 함수와 객체에 대한 자동 완성, 타입 체킹 등의 이점을 제공합니다. </p>\n<p>그렇습니다. Jest는 별도로 설치해야 합니다. </p>\n<h3>Jest 설치</h3>\n<p>Jest 역시 설치해줍니다. 역시 개발 환경에서만 사용할 라이브러리 이므로 —save-dev 옵션을 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev jest</code></pre></div>\n<p>Jest 설치 후 <code class=\"language-text\">package.json</code>  scripts 섹션에 다음의 내용을 추가합니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jest\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이렇게 하면 <code class=\"language-text\">npm test</code> 명령어가 Jest를 실행합니다. </p>\n<h3>TypeScript를 위한 Jest 설정</h3>\n<p>Jest는 기본적으로 JavaScript 파일을 지원하지만 TypeScript 파일을 처리하기 위해서는 추가적인 설정이 필요합니다. </p>\n<h4><code class=\"language-text\">ts-jest</code> 설치</h4>\n<p>Jest가 TypeScript 파일을 이해할 수 있도록 ts-jest를 설치해야 합니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">npm install --save-dev ts-jest</code></pre></div>\n<h4>jest.config.js</h4>\n<p>프로젝트 루트에 jest.config.js 파일을 생성 또는 수정하여 ts-jest를 사용하도록 Jest를 구성합니다. </p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token comment\">// jest.config.js</span>\nmodule.exports = <span class=\"token punctuation\">{</span>\n  preset<span class=\"token operator\">:</span> 'ts-jest'<span class=\"token punctuation\">,</span>\n  testEnvironment<span class=\"token operator\">:</span> 'node'<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>;</code></pre></div>\n<h3><code class=\"language-text\">npm test</code></h3>\n<p>모든 설정을 마친 후 npm test를 실행하면 <code class=\"language-text\">__test__</code> 를 자동으로 탐색하여 <code class=\"language-text\">.test.js</code> 또는 <code class=\"language-text\">.spec.js</code> 접미사를 가진 파일의 테스트를 실행합니다. </p>\n<h2>테스트 파일의 경로</h2>\n<p>테스트 파일을 어디에 둘 것인가? 는 몇가지 패턴이 있고, 가장 널리 사용되는 방식은 다음의 두가지입니다. </p>\n<h3>동일 디렉토리 내에 테스트 파일 배치</h3>\n<p>코드 파일과 동일한 디렉토리에 그에 해당하는 테스트 파일을 둡니다. 테스트 파일과 관련된 코드 파일이 가까이에 있어서 관리하기가 쉬운것이 장점입니다. 파일 이름은 대체로 테스트되는 파일의 이름을 따르며, <code class=\"language-text\">.test</code> 또는 <code class=\"language-text\">.spec</code> 접미사를 추가하여 구분합니다. </p>\n<h3>별도의 테스트 디렉토리 사용</h3>\n<p>프로젝트 루트 또는 각 기능별 디렉토리에 <code class=\"language-text\">__tests__</code> 디렉토리를 만들고, 그 안에 관련 테스트 파일을 모으는 것입니다. 이 구조는 테스트 파일을 소스 코드에서 분리하여, 소스 코드 디렉토리를 더 깔끔하게 유지할 수 있게 해줍니다.</p>\n<p>또는 프로젝트 루트에 <code class=\"language-text\">tests</code> 디렉토리를 만들고 그 안에 모든 테스트 파일을 분류하는 방법도 있습니다.</p>\n<h2>오늘의 마무리</h2>\n<p>여기까지 하면 일단 test 코드를 실행할 수는 있습니다. 코파일럿의 도움을 받아 테스트코들 작성하고, 코드를 읽는데까지는 성공했습니다(?)</p>\n<p>예를 들어 완성한 테스트 코드 하나는 다음과 같습니다. </p>\n<details>\n<summary>envConfig.test.ts</summary>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> EnvConfig <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../envConfig'</span><span class=\"token punctuation\">;</span>\n\ndescribe<span class=\"token punctuation\">(</span><span class=\"token string\">'EnvConfig'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    let envConfig<span class=\"token punctuation\">:</span> EnvConfig<span class=\"token punctuation\">;</span>\n    beforeAll<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">//</span> 환경 변수 설정\n        process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>BLOG_URL <span class=\"token operator\">=</span> <span class=\"token string\">'https://example.com/'</span><span class=\"token punctuation\">;</span>\n        process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>SAVE_DIR <span class=\"token operator\">=</span> <span class=\"token string\">'/path/to/save'</span><span class=\"token punctuation\">;</span>\n        process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>SAVE_SUB_DIR <span class=\"token operator\">=</span> <span class=\"token string\">'subdir'</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token operator\">//</span> EnvConfig 인스턴스 생성\n        envConfig <span class=\"token operator\">=</span> EnvConfig<span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    afterAll<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">//</span> 환경 변수 정리\n        delete process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>BLOG_URL<span class=\"token punctuation\">;</span>\n        delete process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>SAVE_DIR<span class=\"token punctuation\">;</span>\n        delete process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>SAVE_SUB_DIR<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    it<span class=\"token punctuation\">(</span><span class=\"token string\">'should have the correct notionKey value'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        expect<span class=\"token punctuation\">(</span>envConfig<span class=\"token punctuation\">.</span>notionKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>toEqual<span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>NOTION_KEY <span class=\"token operator\">|</span><span class=\"token operator\">|</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    it<span class=\"token punctuation\">(</span><span class=\"token string\">'should have the correct databaseid value'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        expect<span class=\"token punctuation\">(</span>envConfig<span class=\"token punctuation\">.</span>databaseid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>toEqual<span class=\"token punctuation\">(</span>\n            process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>NOTION_DATABASE_ID <span class=\"token operator\">|</span><span class=\"token operator\">|</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    it<span class=\"token punctuation\">(</span><span class=\"token string\">'should correctly handle trailing slashes'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        expect<span class=\"token punctuation\">(</span>envConfig<span class=\"token punctuation\">.</span>blogUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>toEqual<span class=\"token punctuation\">(</span><span class=\"token string\">'https://example.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">//</span> 끝 슬래시 제거 확인\n        expect<span class=\"token punctuation\">(</span>envConfig<span class=\"token punctuation\">.</span>saveDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>toEqual<span class=\"token punctuation\">(</span><span class=\"token string\">'/path/to/save/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">//</span> 끝에 슬래시 추가 확인\n        expect<span class=\"token punctuation\">(</span>envConfig<span class=\"token punctuation\">.</span>saveSubDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>toEqual<span class=\"token punctuation\">(</span><span class=\"token string\">'subdir/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">//</span> 끝에 슬래시 추가 확인\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</details>\n<p>테스트코드를 작성하면서 느낀점은, 역시 테스트코드는 사전에 짜는게 의미가 있는 것 같습니다. 또 역시 문법이 상당히 어색합니다. 추가적인 노력이 많이 필요하다고 느끼고, 가능하면 다음에는 프로젝트 처음부터 테스트 코드를 먼저 짜보려고 합니다. </p>\n<p>오히려 좀 더 필요성을 느끼게 되었습니다. 살짝 고생했지만 좋은 시간이었습니다. </p>","frontmatter":{"title":"Typescript의 Testcode 맛보기","date":"February 06, 2024","update":"February 06, 2024","tags":["Typescript"],"series":null},"fields":{"slug":"/Typescript의-Testcode-맛보기/","readingTime":{"minutes":6.815}}},"seriesList":{"edges":[{"node":{"id":"00a77006-3818-58af-bda3-49bb95a478d4","fields":{"slug":"/화상상담을-위한-Janus-구성/"},"frontmatter":{"title":"화상상담을 위한 Janus 구성"}}},{"node":{"id":"9b87562c-3e43-5ec2-a1a1-06c53d1c675c","fields":{"slug":"/JavaScript의-특징-브라우저-동작-원리/"},"frontmatter":{"title":"JavaScript의 특징, 브라우저 동작 원리"}}},{"node":{"id":"26f64d7f-43cb-5003-ab09-34e08a4f9fa3","fields":{"slug":"/JavaScript-기본-문법/"},"frontmatter":{"title":"JavaScript 기본 문법"}}},{"node":{"id":"fa695bf5-57e6-5bf0-bd58-12c299a86f2e","fields":{"slug":"/JavaScript의-변수/"},"frontmatter":{"title":"JavaScript의 변수"}}},{"node":{"id":"5948222d-3860-5d05-963f-f2b869b4a716","fields":{"slug":"/JavaScript의-타입-변환과-단축-평가/"},"frontmatter":{"title":"JavaScript의 타입 변환과 단축 평가"}}},{"node":{"id":"2da8d381-203a-5484-b874-ecda0760765e","fields":{"slug":"/JavaScript-클로저/"},"frontmatter":{"title":"JavaScript 클로저"}}},{"node":{"id":"de8049ee-f319-539d-8b4d-a9401ffc7052","fields":{"slug":"/NestJS-소개/"},"frontmatter":{"title":"NestJS 소개"}}},{"node":{"id":"d1ee1dfa-292a-532f-8ab3-487a9575d65a","fields":{"slug":"/DB-튜닝-경험/"},"frontmatter":{"title":"DB 튜닝 경험"}}},{"node":{"id":"65ef6804-a370-5087-936b-4c0568b19714","fields":{"slug":"/MORETHAN-LOG-설치/"},"frontmatter":{"title":"MORETHAN-LOG 설치"}}},{"node":{"id":"0c073300-9bbf-5968-903d-972daddca62a","fields":{"slug":"/RDB관계형-데이터베이스-RDBMS/"},"frontmatter":{"title":"RDB(관계형 데이터베이스) + RDBMS"}}},{"node":{"id":"615dae84-f7e1-5e94-87a1-a0a6ea28f0ee","fields":{"slug":"/var와-letconst/"},"frontmatter":{"title":"var와 let,const"}}},{"node":{"id":"b93488ac-2c0a-5e6c-b76f-0f65b73c20cb","fields":{"slug":"/MORETHAN-LOG-수정/"},"frontmatter":{"title":"MORETHAN-LOG 수정"}}},{"node":{"id":"c44bb53c-f3c1-537f-bf08-2469a8afc71e","fields":{"slug":"/NestJS-설치/"},"frontmatter":{"title":"NestJS 설치"}}},{"node":{"id":"3d415bd8-543d-58ab-806f-17140e82b34d","fields":{"slug":"/NestJS의-디렉토리-구조/"},"frontmatter":{"title":"NestJS의 디렉토리 구조"}}},{"node":{"id":"5fccef8c-d9be-5c31-b47e-a38562d70cde","fields":{"slug":"/웹-사이트-프로젝트-vs-웹-응용-프로그램-프로젝트/"},"frontmatter":{"title":"웹 사이트 프로젝트 vs 웹 응용 프로그램 프로젝트"}}},{"node":{"id":"a052bb08-8fc2-598f-9b5b-218eb727933e","fields":{"slug":"/Nuget-패키지-dll-추출/"},"frontmatter":{"title":"Nuget 패키지 dll 추출"}}},{"node":{"id":"d5eefb78-162d-5c44-80e5-e08b0afc6282","fields":{"slug":"/무료-웹-호스팅-비교/"},"frontmatter":{"title":"무료 웹 호스팅 비교"}}},{"node":{"id":"04f440ee-551d-5e36-a047-f56b38f89ab3","fields":{"slug":"/PRG-패턴-PostRedirectGet/"},"frontmatter":{"title":"PRG 패턴 (Post/Redirect/Get)"}}},{"node":{"id":"a76404d9-9edd-5175-8d95-bd2f476cdfbb","fields":{"slug":"/Python-venv-Windows/"},"frontmatter":{"title":"Python venv (Windows)"}}},{"node":{"id":"6065e14b-bb9f-532d-a34f-236409f4ea86","fields":{"slug":"/print와-pprint/"},"frontmatter":{"title":"print와 pprint"}}},{"node":{"id":"4ec48bde-bee2-5948-9f21-638952ab1af0","fields":{"slug":"/정규화와-역정규화/"},"frontmatter":{"title":"정규화와 역정규화"}}},{"node":{"id":"fee328a3-dfc2-5c47-8023-9b6685d6bc3a","fields":{"slug":"/트래픽-튜닝/"},"frontmatter":{"title":"트래픽 튜닝"}}},{"node":{"id":"a8b5dbc3-78fd-59b7-826a-a7915052f4dd","fields":{"slug":"/npx/"},"frontmatter":{"title":"npx"}}},{"node":{"id":"6a68ac7e-0292-5643-9d75-fdf9a57d32db","fields":{"slug":"/Branch/"},"frontmatter":{"title":"Branch"}}},{"node":{"id":"c44faec0-9520-54c4-80ae-be2c30cc098b","fields":{"slug":"/DataTable-클래스/"},"frontmatter":{"title":"DataTable 클래스"}}},{"node":{"id":"5207d586-fb17-555a-98df-511914e0e7de","fields":{"slug":"/Typescript-시작하기/"},"frontmatter":{"title":"Typescript 시작하기"}}},{"node":{"id":"37794a8d-0982-53e2-a47c-e85307bba925","fields":{"slug":"/gitignore/"},"frontmatter":{"title":"gitignore"}}},{"node":{"id":"afe6dd13-eac6-5d2f-89d0-a51cba20e3ac","fields":{"slug":"/Factory-Pattern/"},"frontmatter":{"title":"Factory Pattern"}}},{"node":{"id":"cfb70bd8-48d0-54d8-85b0-174bfc3b9913","fields":{"slug":"/네이밍-규칙naming-conventions/"},"frontmatter":{"title":"네이밍 규칙(naming conventions)"}}},{"node":{"id":"66a2c53a-7aca-5455-8090-352c0114ad89","fields":{"slug":"/ColdStart/"},"frontmatter":{"title":"ColdStart"}}},{"node":{"id":"5453d052-2e7f-5829-8b85-d433ca451d68","fields":{"slug":"/Serverless/"},"frontmatter":{"title":"Serverless"}}},{"node":{"id":"4a1706c9-ebf6-52b1-9b32-e6823b8ce2a3","fields":{"slug":"/AWS-API-Gateway/"},"frontmatter":{"title":"AWS API Gateway"}}},{"node":{"id":"249f2c76-8e1f-5c9b-b23c-5f2dfa0e6539","fields":{"slug":"/Dynamo-DB/"},"frontmatter":{"title":"Dynamo DB"}}},{"node":{"id":"861f8d0f-03a0-56d2-b5e0-1c6f7eb5885f","fields":{"slug":"/NoSQL/"},"frontmatter":{"title":"NoSQL"}}},{"node":{"id":"c7decc77-296b-594b-a67e-94a28644b631","fields":{"slug":"/REST/"},"frontmatter":{"title":"REST"}}},{"node":{"id":"2f7e8bc3-4cf6-57ec-9317-0f160a7d4df2","fields":{"slug":"/TypeError-non-default-argument-content-follows-default-argument/"},"frontmatter":{"title":"TypeError: non-default argument 'content' follows default argument"}}},{"node":{"id":"0147b10f-83b7-5583-b23b-04def80c0817","fields":{"slug":"/브랜치-관리-전략/"},"frontmatter":{"title":"브랜치 관리 전략"}}},{"node":{"id":"8af31d09-cd75-584c-bb2e-bcb44fd0ab07","fields":{"slug":"/Unit-Test단위-테스트/"},"frontmatter":{"title":"Unit Test(단위 테스트)"}}},{"node":{"id":"6624b432-dede-5d27-893c-216435f81dfc","fields":{"slug":"/__post_init__/"},"frontmatter":{"title":"__post_init__"}}},{"node":{"id":"c9205ad4-3b94-5f9b-9873-ceed541116b9","fields":{"slug":"/dataclass/"},"frontmatter":{"title":"dataclass"}}},{"node":{"id":"8e311167-515e-5479-806d-576655d5aa6d","fields":{"slug":"/FastAPI와-DDD/"},"frontmatter":{"title":"FastAPI와 DDD"}}},{"node":{"id":"80faec5b-ac3c-55f4-8278-c5df45eeaeee","fields":{"slug":"/vercel-배포-자동화/"},"frontmatter":{"title":"vercel 배포 자동화"}}},{"node":{"id":"a596c40a-9b38-51b3-83ba-4822bd6ad215","fields":{"slug":"/AWS-ECSElastic-Container-Service/"},"frontmatter":{"title":"AWS ECS(Elastic Container Service)"}}},{"node":{"id":"af893e8d-1d43-5da0-b92e-fca9abfbdaea","fields":{"slug":"/Blue-Green-Deploy-전략/"},"frontmatter":{"title":"Blue Green Deploy 전략"}}},{"node":{"id":"0f61c80f-0860-5374-9507-690750d8738d","fields":{"slug":"/CloudFront/"},"frontmatter":{"title":"CloudFront"}}},{"node":{"id":"da0900a9-d1a3-5f11-b1a7-c2b1b79a025b","fields":{"slug":"/Poetry/"},"frontmatter":{"title":"Poetry"}}},{"node":{"id":"496bf14d-cf6f-551c-968d-c356aea3d9b1","fields":{"slug":"/DynamoDB의-동시성-제어Concurrency-Control/"},"frontmatter":{"title":"DynamoDB의 동시성 제어(Concurrency Control)"}}},{"node":{"id":"6fcbdee7-120b-57bd-b0c2-4c046589430b","fields":{"slug":"/FastAPI/"},"frontmatter":{"title":"FastAPI"}}},{"node":{"id":"2e1a8c7e-a8ad-58ac-9795-449d177048c6","fields":{"slug":"/Pydantic-모델/"},"frontmatter":{"title":"Pydantic 모델"}}},{"node":{"id":"e967fbe2-df8c-5d69-b5d6-13133817266e","fields":{"slug":"/FastAPI의-데코레이터/"},"frontmatter":{"title":"FastAPI의 데코레이터"}}},{"node":{"id":"4a995071-315b-57e1-8b9f-d6caa89ec351","fields":{"slug":"/생성기generate-패턴/"},"frontmatter":{"title":"생성기(generate) 패턴"}}},{"node":{"id":"4bd6f525-f59f-5917-9c63-bfee49948344","fields":{"slug":"/FastAPI에서-데코레이터와-Dependency/"},"frontmatter":{"title":"FastAPI에서 데코레이터와 Dependency"}}},{"node":{"id":"c1d8f764-63e6-5920-af1d-cc6ed82cab31","fields":{"slug":"/FastAPI와-asyncio/"},"frontmatter":{"title":"FastAPI와 asyncio"}}},{"node":{"id":"100f4f92-fdaa-53c8-93e5-96509170e2f3","fields":{"slug":"/aiohttp/"},"frontmatter":{"title":"aiohttp"}}},{"node":{"id":"eb8cca17-daa2-5b06-806b-3f96b650e68e","fields":{"slug":"/단축어로-SLACK-프로필-변경하기/"},"frontmatter":{"title":"단축어로 SLACK 프로필 변경하기"}}},{"node":{"id":"3aa5fd9e-e7a6-5d5d-b388-cced68004144","fields":{"slug":"/PynamoDB와-boto3-PynamoDB의-커넥션/"},"frontmatter":{"title":"PynamoDB와 boto3, PynamoDB의 커넥션"}}},{"node":{"id":"79b9b7d1-4816-53bd-a9be-1a42a3addf69","fields":{"slug":"/FastAPI에서-Postgresql의-커넥션-관리/"},"frontmatter":{"title":"FastAPI에서 Postgresql의 커넥션 관리"}}},{"node":{"id":"9d31ab39-c391-5100-8b1a-57e082219f0f","fields":{"slug":"/Sqlalchemy-비동기-엔진에서의-Postgresql-Pooler/"},"frontmatter":{"title":"Sqlalchemy 비동기 엔진에서의 Postgresql Pooler"}}},{"node":{"id":"3436aeb2-c9f0-56ff-b737-5adce4033c55","fields":{"slug":"/FastAPI의-Pagenation/"},"frontmatter":{"title":"FastAPI의 Pagenation"}}},{"node":{"id":"3c324741-c5af-5c92-a470-0093a3060c01","fields":{"slug":"/SqlAlchemy의-QueuePool/"},"frontmatter":{"title":"SqlAlchemy의 QueuePool"}}},{"node":{"id":"31479f72-375a-5d24-94d4-33e54c6d4b93","fields":{"slug":"/Pydantic-Model의-응용/"},"frontmatter":{"title":"Pydantic Model의 응용"}}},{"node":{"id":"280d0c1b-b14b-58e2-8adc-a140de967ea2","fields":{"slug":"/Union-Type/"},"frontmatter":{"title":"Union Type"}}},{"node":{"id":"e9509d5a-bdcd-5cf1-ac9f-75030f0bd9f7","fields":{"slug":"/우분투-용량-관리/"},"frontmatter":{"title":"우분투 용량 관리"}}},{"node":{"id":"b13d92a7-a846-5ceb-bf1c-8164da4ca0b9","fields":{"slug":"/Sqlalchemy에서의-트랜잭션-격리-수준-구현/"},"frontmatter":{"title":"Sqlalchemy에서의 트랜잭션 격리 수준 구현"}}},{"node":{"id":"770b4205-c82e-5645-b778-249d6eaa698e","fields":{"slug":"/트랜잭션-격리-수준Transaction-Isolation-Level/"},"frontmatter":{"title":"트랜잭션 격리 수준(Transaction Isolation Level)"}}},{"node":{"id":"b90cac43-c3fb-5909-a246-c732a3e8654e","fields":{"slug":"/PostgreSQL-Advisory-Locks-트랜잭션-레벨에서-구현/"},"frontmatter":{"title":"PostgreSQL Advisory Locks 트랜잭션 레벨에서 구현"}}},{"node":{"id":"c714646b-b50c-5276-ae7c-48259930dcf2","fields":{"slug":"/Sqlalchemy의-func/"},"frontmatter":{"title":"Sqlalchemy의 func"}}},{"node":{"id":"f5517be6-c8c2-576d-a17d-33f22f4c9bf7","fields":{"slug":"/동시성-제어문제-해결/"},"frontmatter":{"title":"동시성 제어문제 해결"}}},{"node":{"id":"6dd955b3-f181-577e-ac9a-ca78332aabd9","fields":{"slug":"/vscode-quick-Suggestions/"},"frontmatter":{"title":"vscode-quick Suggestions"}}},{"node":{"id":"2a57e1ce-076a-5342-b603-cd621e327fc3","fields":{"slug":"/Typescript의-열거형/"},"frontmatter":{"title":"Typescript의 열거형"}}},{"node":{"id":"21b7cba3-11a6-55c2-bfaa-5910041d8d05","fields":{"slug":"/Github-Action-Output/"},"frontmatter":{"title":"Github Action Output"}}},{"node":{"id":"da75b473-e208-5569-a01c-9a8c8dfcbf9d","fields":{"slug":"/Github-Actions/"},"frontmatter":{"title":"Github Actions"}}},{"node":{"id":"9bfd7c7d-1916-5513-bce7-d106583ae1fb","fields":{"slug":"/Github-Actions-Job---needs/"},"frontmatter":{"title":"Github Actions Job - needs"}}},{"node":{"id":"d4953c37-32d6-5c0f-b1ed-1ca71141c02d","fields":{"slug":"/Github-Actions-Workflow-수동으로-실행하기/"},"frontmatter":{"title":"Github Actions Workflow 수동으로 실행하기"}}},{"node":{"id":"db0bcfb1-23c4-5eca-b50b-8da83d567a83","fields":{"slug":"/Typescript의-Testcode-맛보기/"},"frontmatter":{"title":"Typescript의 Testcode 맛보기"}}}]},"previous":{"fields":{"slug":"/Github-Actions-Workflow-수동으로-실행하기/"},"frontmatter":{"title":"Github Actions Workflow 수동으로 실행하기"}},"next":null},"pageContext":{"id":"db0bcfb1-23c4-5eca-b50b-8da83d567a83","series":null,"previousPostId":"d4953c37-32d6-5c0f-b1ed-1ca71141c02d","nextPostId":null}},"staticQueryHashes":[],"slicesMap":{}}