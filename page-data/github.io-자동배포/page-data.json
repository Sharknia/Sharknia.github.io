{"componentChunkName":"component---src-templates-post-jsx","path":"/github.io-자동배포/","result":{"data":{"site":{"siteMetadata":{"title":"SharkniA"}},"markdownRemark":{"id":"d9700f62-8540-5a02-990f-475860911053","excerpt":"지난시간 github.io를 이용한 블로그 왜 하는가 나는 귀찮은게 너무 귀찮다.  커밋 한 이후에  를 해야 배포가 되는 것도 너무 귀찮았다.  무엇을 하는가 그래서, 이걸  을 이용해서 자동화를 했다.  에 임의의 yml 파일을 넣어주면 해당 작업을 github action에서 진행한다.  어떻게 했는가 yml 파일 내용은 다음과 같다.  문제는 없었…","html":"<h3>지난시간</h3>\n<p><a href=\"https://sharknia.vercel.app/github.io%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8\">github.io를 이용한 블로그</a></p>\n<h3>왜 하는가</h3>\n<p>나는 귀찮은게 너무 귀찮다. </p>\n<p>커밋 한 이후에 </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run deploy-gh</code></pre></div>\n<p>를 해야 배포가 되는 것도 너무 귀찮았다. </p>\n<h3>무엇을 하는가</h3>\n<p>그래서, 이걸 <code class=\"language-text\">github action</code> 을 이용해서 자동화를 했다. </p>\n<p><code class=\"language-text\">.gitbub/workflows</code>에 임의의 yml 파일을 넣어주면 해당 작업을 github action에서 진행한다. </p>\n<h3>어떻게 했는가</h3>\n<p>yml 파일 내용은 다음과 같다. </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">name: Deploy\n\non: <span class=\"token comment\"># 어떤 작업이 수행될 때 deploy.yml 작업이 수행된다. (트리거)</span>\n  push: <span class=\"token comment\"># push 작업이 수행될 때</span>\n    branches: <span class=\"token comment\"># 특정 브랜치를 대상으로</span>\n      - master\n\npermissions: <span class=\"token comment\"># github action이 수행되는 환경에서 특정 권한을 준다</span>\n  contents: <span class=\"token function\">write</span>\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-node@v2\n        with:\n          node-version: <span class=\"token number\">20.3</span>.1\n\n      - name: Install <span class=\"token function\">node</span> packages\n        run: <span class=\"token function\">yarn</span>\n        \n      - name: Check lint\n        run: <span class=\"token function\">yarn</span> check:lint\n        \n      <span class=\"token comment\"># 아래와 같은 오류가 남</span>\n      <span class=\"token comment\"># error Command failed with exit code 1.</span>\n      <span class=\"token comment\"># info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.</span>\n      <span class=\"token comment\"># - name: Check prettier</span>\n      <span class=\"token comment\">#   run: yarn check:prettier</span>\n      \n      - name: Build\n        run: <span class=\"token function\">yarn</span> build\n        \n      - name: Set up GitHub token\n        env:\n          GITHUB_TOKEN: <span class=\"token variable\">${{ secrets.Token}</span><span class=\"token punctuation\">}</span>\n        run: <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.email <span class=\"token string\">\"email입력\"</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.name <span class=\"token string\">\"name입력\"</span>\n\n      - name: Set Git remote URL with token\n        run: <span class=\"token function\">git</span> remote set-url origin https://<span class=\"token variable\">${{ secrets.classicToken }</span><span class=\"token punctuation\">}</span>@github.com/Sharknia/Sharknia.github.io\n\n      - name: Deploy to GitHub Pages\n        run: npx gh-pages <span class=\"token parameter variable\">-d</span> public</code></pre></div>\n<h3>문제는 없었는가</h3>\n<p>처음에는 npm install을 사용했었는데, 패키지가 없다던지 여러가지 문제가 났다. 해당 문제는 npx 명령을 사용하는 것으로 해결돼</p>\n<p>Deploy 까지 자동으로 하기 위해서는 깃허브 설정 관련 명령어가 필요했다. </p>\n<p>특히, 반드시 토큰을 발행하고 Github Action의 환경 변수에 추가를 해주어야 한다.</p>","frontmatter":{"title":"github.io 자동배포","date":"August 30, 2023","update":"August 31, 2023","tags":["Blogging"],"series":"GitHub Pages와 Notion API 연동"},"fields":{"slug":"/github.io-자동배포/","readingTime":{"minutes":2.175}}},"seriesList":{"edges":[{"node":{"id":"82917c87-e82b-5067-89c4-6a5ba0662c26","fields":{"slug":"/Notion-Api-1/"},"frontmatter":{"title":"Notion API(1)"}}},{"node":{"id":"822583f2-4100-5184-9559-cbed3e005079","fields":{"slug":"/github.io를-이용한-블로그/"},"frontmatter":{"title":"github.io를 이용한 블로그"}}},{"node":{"id":"d9700f62-8540-5a02-990f-475860911053","fields":{"slug":"/github.io-자동배포/"},"frontmatter":{"title":"github.io 자동배포"}}},{"node":{"id":"8a6987b5-4fee-5a64-8deb-f3fd1f5af970","fields":{"slug":"/Notion-Api-2/"},"frontmatter":{"title":"Notion API(2)"}}}]},"previous":{"fields":{"slug":"/github.io를-이용한-블로그/"},"frontmatter":{"title":"github.io를 이용한 블로그"}},"next":{"fields":{"slug":"/Notion-Api-2/"},"frontmatter":{"title":"Notion API(2)"}}},"pageContext":{"id":"d9700f62-8540-5a02-990f-475860911053","series":"GitHub Pages와 Notion API 연동","previousPostId":"822583f2-4100-5184-9559-cbed3e005079","nextPostId":"8a6987b5-4fee-5a64-8deb-f3fd1f5af970"}},"staticQueryHashes":[],"slicesMap":{}}